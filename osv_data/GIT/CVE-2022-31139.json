{"schema_version":"1.7.3","id":"CVE-2022-31139","published":"2022-07-11T18:25:11Z","modified":"2025-10-24T04:17:17.603659Z","aliases":["GHSA-cr6p-23cf-w9g9"],"summary":"No security checking for UnsafeAccess.getInstance() in UnsafeAccessor","details":"UnsafeAccessor (UA) is a bridge to access jdk.internal.misc.Unsafe & sun.misc.Unsafe. Normally, if UA is loaded as a named module, the internal data of UA is protected by JVM and others can only access UA via UA's standard API. The main application can set up `SecurityCheck.AccessLimiter` for UA to limit access to UA. Starting with version 1.4.0 and prior to version 1.7.0, when `SecurityCheck.AccessLimiter` is set up, untrusted code can access UA without limitation, even when UA is loaded as a named module. This issue does not affect those for whom `SecurityCheck.AccessLimiter` is not set up. Version 1.7.0 contains a patch.","affected":[{"ranges":[{"type":"GIT","repo":"https://github.com/karlamoe/unsafe-accessor","events":[{"introduced":"0"},{"fixed":"4ef83000184e8f13239a1ea2847ee401d81585fd"},{"fixed":"de5d97c6eb5f6af5df929bb02a1ccce3849628fe"}]}],"versions":["1.2.2","1.4.0","1.6.0","1.6.1","1.6.2"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-31139.json","vanir_signatures":[{"deprecated":false,"digest":{"line_hashes":["276211520949689525906710762932037517577","61237748990846886015580643052983705232","198465552813145290248279674272781361708","301432691511952116807847073780040669689","65696790175831737429135445041120433134"],"threshold":0.9},"id":"CVE-2022-31139-042e206e","signature_type":"Line","signature_version":"v1","source":"https://github.com/karlamoe/unsafe-accessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd","target":{"file":"api/src/main/java/io/github/karlatemp/unsafeaccessor/Root.java"}},{"deprecated":false,"digest":{"function_hash":"133882639534931489651667530240828065711","length":71},"id":"CVE-2022-31139-3673d00c","signature_type":"Function","signature_version":"v1","source":"https://github.com/karlamoe/unsafe-accessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd","target":{"file":"api/src/main/java/io/github/karlatemp/unsafeaccessor/UnsafeAccess.java","function":"getInstance"}},{"deprecated":false,"digest":{"line_hashes":["317604557034641769031988446587918086979","96641214441246372653098416829805062759","147421538160478447053894792659446844062","91246230820035578397817676334229054881"],"threshold":0.9},"id":"CVE-2022-31139-7de79cf5","signature_type":"Line","signature_version":"v1","source":"https://github.com/karlamoe/unsafe-accessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd","target":{"file":"api/src/main/java/io/github/karlatemp/unsafeaccessor/UnsafeAccess.java"}},{"deprecated":false,"digest":{"function_hash":"173710698265814153753509711984784826444","length":141},"id":"CVE-2022-31139-9edc6282","signature_type":"Function","signature_version":"v1","source":"https://github.com/karlamoe/unsafe-accessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd","target":{"file":"api/src/main/java/io/github/karlatemp/unsafeaccessor/Root.java","function":"throw0"}}]}},{"ranges":[{"type":"GIT","repo":"https://github.com/karlatemp/unsafeaccessor","events":[{"introduced":"aa4c1c44e43bef056bfb014c594fccf473a524bd"},{"fixed":"de5d97c6eb5f6af5df929bb02a1ccce3849628fe"}]}],"versions":["1.4.0","1.6.0","1.6.1","1.6.2"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-31139.json"}}],"references":[{"type":"ADVISORY","url":"https://github.com/Karlatemp/UnsafeAccessor/security/advisories/GHSA-cr6p-23cf-w9g9"},{"type":"FIX","url":"https://github.com/Karlatemp/UnsafeAccessor/commit/4ef83000184e8f13239a1ea2847ee401d81585fd"},{"type":"WEB","url":"https://github.com/Karlatemp/UnsafeAccessor/releases/tag/1.7.0"}],"database_specific":{"cwe_ids":["CWE-200"]},"severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}]}