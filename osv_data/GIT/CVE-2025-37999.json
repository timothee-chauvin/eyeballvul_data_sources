{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-37999.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "ce63cb62d794c98c7631c2296fa845f2a8d0a4a1"
            },
            {
              "fixed": "61e0fc3312309867e5a3495329dad0286d2a5703"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "ce63cb62d794c98c7631c2296fa845f2a8d0a4a1"
            },
            {
              "fixed": "c26076197df348c84cc23e5962d61902e072a0f5"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "ce63cb62d794c98c7631c2296fa845f2a8d0a4a1"
            },
            {
              "fixed": "bbfe756dc3062c1e934f06e5ba39c239aa953b92"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "v6.11",
        "v6.12",
        "v6.12-rc1",
        "v6.12-rc2",
        "v6.12-rc3",
        "v6.12-rc4",
        "v6.12-rc5",
        "v6.12-rc6",
        "v6.12-rc7",
        "v6.12.1",
        "v6.12.10",
        "v6.12.11",
        "v6.12.12",
        "v6.12.13",
        "v6.12.14",
        "v6.12.15",
        "v6.12.16",
        "v6.12.17",
        "v6.12.18",
        "v6.12.19",
        "v6.12.2",
        "v6.12.20",
        "v6.12.21",
        "v6.12.22",
        "v6.12.23",
        "v6.12.24",
        "v6.12.25",
        "v6.12.26",
        "v6.12.27",
        "v6.12.28",
        "v6.12.3",
        "v6.12.4",
        "v6.12.5",
        "v6.12.6",
        "v6.12.7",
        "v6.12.8",
        "v6.12.9",
        "v6.13",
        "v6.13-rc1",
        "v6.13-rc2",
        "v6.13-rc3",
        "v6.13-rc4",
        "v6.13-rc5",
        "v6.13-rc6",
        "v6.13-rc7",
        "v6.14",
        "v6.14-rc1",
        "v6.14-rc2",
        "v6.14-rc3",
        "v6.14-rc4",
        "v6.14-rc5",
        "v6.14-rc6",
        "v6.14-rc7",
        "v6.14.1",
        "v6.14.2",
        "v6.14.3",
        "v6.14.4",
        "v6.14.5",
        "v6.14.6",
        "v6.15-rc1",
        "v6.15-rc2",
        "v6.15-rc3",
        "v6.15-rc4"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-37999.json"
      },
      "package": {
        "ecosystem": "Linux",
        "name": "Kernel"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "6.12.0"
            },
            {
              "fixed": "6.12.29"
            }
          ],
          "type": "ECOSYSTEM"
        },
        {
          "events": [
            {
              "introduced": "6.13.0"
            },
            {
              "fixed": "6.14.7"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/erofs/fileio: call erofs_onlinefolio_split() after bio_add_folio()\n\nIf bio_add_folio() fails (because it is full),\nerofs_fileio_scan_folio() needs to submit the I/O request via\nerofs_fileio_rq_submit() and allocate a new I/O request with an empty\n`struct bio`.  Then it retries the bio_add_folio() call.\n\nHowever, at this point, erofs_onlinefolio_split() has already been\ncalled which increments `folio->private`; the retry will call\nerofs_onlinefolio_split() again, but there will never be a matching\nerofs_onlinefolio_end() call.  This leaves the folio locked forever\nand all waiters will be stuck in folio_wait_bit_common().\n\nThis bug has been added by commit ce63cb62d794 (\"erofs: support\nunencoded inodes for fileio\"), but was practically unreachable because\nthere was room for 256 folios in the `struct bio` - until commit\n9f74ae8c9ac9 (\"erofs: shorten bvecs[] for file-backed mounts\") which\nreduced the array capacity to 16 folios.\n\nIt was now trivial to trigger the bug by manually invoking readahead\nfrom userspace, e.g.:\n\n posix_fadvise(fd, 0, st.st_size, POSIX_FADV_WILLNEED);\n\nThis should be fixed by invoking erofs_onlinefolio_split() only after\nbio_add_folio() has succeeded.  This is safe: asynchronous completions\ninvoking erofs_onlinefolio_end() will not unlock the folio because\nerofs_fileio_scan_folio() is still holding a reference to be released\nby erofs_onlinefolio_end() at the end.",
  "id": "CVE-2025-37999",
  "modified": "2025-10-16T00:44:20.465002Z",
  "published": "2025-05-29T13:15:56Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/61e0fc3312309867e5a3495329dad0286d2a5703"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/bbfe756dc3062c1e934f06e5ba39c239aa953b92"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/c26076197df348c84cc23e5962d61902e072a0f5"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "fs/erofs/fileio: call erofs_onlinefolio_split() after bio_add_folio()"
}