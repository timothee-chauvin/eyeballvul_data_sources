{"schema_version":"1.7.3","id":"CVE-2024-46787","published":"2024-09-18T07:12:43Z","modified":"2025-10-22T03:03:24.970138Z","related":["MGASA-2024-0316","MGASA-2024-0318","SUSE-SU-2024:3551-1","SUSE-SU-2024:3553-1","SUSE-SU-2024:3559-1","SUSE-SU-2024:3561-1","SUSE-SU-2024:3564-1","SUSE-SU-2024:3566-1","SUSE-SU-2024:3569-1","SUSE-SU-2024:3587-1","SUSE-SU-2024:3591-1","SUSE-SU-2024:3592-1"],"summary":"userfaultfd: fix checks for huge PMDs","details":"In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: fix checks for huge PMDs\n\nPatch series \"userfaultfd: fix races around pmd_trans_huge() check\", v2.\n\nThe pmd_trans_huge() code in mfill_atomic() is wrong in three different\nways depending on kernel version:\n\n1. The pmd_trans_huge() check is racy and can lead to a BUG_ON() (if you hit\n   the right two race windows) - I've tested this in a kernel build with\n   some extra mdelay() calls. See the commit message for a description\n   of the race scenario.\n   On older kernels (before 6.5), I think the same bug can even\n   theoretically lead to accessing transhuge page contents as a page table\n   if you hit the right 5 narrow race windows (I haven't tested this case).\n2. As pointed out by Qi Zheng, pmd_trans_huge() is not sufficient for\n   detecting PMDs that don't point to page tables.\n   On older kernels (before 6.5), you'd just have to win a single fairly\n   wide race to hit this.\n   I've tested this on 6.1 stable by racing migration (with a mdelay()\n   patched into try_to_migrate()) against UFFDIO_ZEROPAGE - on my x86\n   VM, that causes a kernel oops in ptlock_ptr().\n3. On newer kernels (>=6.5), for shmem mappings, khugepaged is allowed\n   to yank page tables out from under us (though I haven't tested that),\n   so I think the BUG_ON() checks in mfill_atomic() are just wrong.\n\nI decided to write two separate fixes for these (one fix for bugs 1+2, one\nfix for bug 3), so that the first fix can be backported to kernels\naffected by bugs 1+2.\n\n\nThis patch (of 2):\n\nThis fixes two issues.\n\nI discovered that the following race can occur:\n\n  mfill_atomic                other thread\n  ============                ============\n                              <zap PMD>\n  pmdp_get_lockless() [reads none pmd]\n  <bail if trans_huge>\n  <if none:>\n                              <pagefault creates transhuge zeropage>\n    __pte_alloc [no-op]\n                              <zap PMD>\n  <bail if pmd_trans_huge(*dst_pmd)>\n  BUG_ON(pmd_none(*dst_pmd))\n\nI have experimentally verified this in a kernel with extra mdelay() calls;\nthe BUG_ON(pmd_none(*dst_pmd)) triggers.\n\nOn kernels newer than commit 0d940a9b270b (\"mm/pgtable: allow\npte_offset_map[_lock]() to fail\"), this can't lead to anything worse than\na BUG_ON(), since the page table access helpers are actually designed to\ndeal with page tables concurrently disappearing; but on older kernels\n(<=6.4), I think we could probably theoretically race past the two\nBUG_ON() checks and end up treating a hugepage as a page table.\n\nThe second issue is that, as Qi Zheng pointed out, there are other types\nof huge PMDs that pmd_trans_huge() can't catch: devmap PMDs and swap PMDs\n(in particular, migration PMDs).\n\nOn <=6.4, this is worse than the first issue: If mfill_atomic() runs on a\nPMD that contains a migration entry (which just requires winning a single,\nfairly wide race), it will pass the PMD to pte_offset_map_lock(), which\nassumes that the PMD points to a page table.\n\nBreakage follows: First, the kernel tries to take the PTE lock (which will\ncrash or maybe worse if there is no \"struct page\" for the address bits in\nthe migration entry PMD - I think at least on X86 there usually is no\ncorresponding \"struct page\" thanks to the PTE inversion mitigation, amd64\nlooks different).\n\nIf that didn't crash, the kernel would next try to write a PTE into what\nit wrongly thinks is a page table.\n\nAs part of fixing these issues, get rid of the check for pmd_trans_huge()\nbefore __pte_alloc() - that's redundant, we're going to have to check for\nthat after the __pte_alloc() anyway.\n\nBackport note: pmdp_get_lockless() is pmd_read_atomic() in older kernels.","affected":[{"ranges":[{"type":"GIT","repo":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git","events":[{"introduced":"c1a4de99fada21e2e9251e52cbb51eff5aadc757"},{"fixed":"3c6b4bcf37845c9359aed926324bed66bdd2448d"}]},{"type":"GIT","repo":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git","events":[{"introduced":"c1a4de99fada21e2e9251e52cbb51eff5aadc757"},{"fixed":"98cc18b1b71e23fe81a5194ed432b20c2d81a01a"}]},{"type":"GIT","repo":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git","events":[{"introduced":"c1a4de99fada21e2e9251e52cbb51eff5aadc757"},{"fixed":"71c186efc1b2cf1aeabfeff3b9bd5ac4c5ac14d8"}]}],"versions":["v4.10","v4.10-rc1","v4.10-rc2","v4.10-rc3","v4.10-rc4","v4.10-rc5","v4.10-rc6","v4.10-rc7","v4.10-rc8","v4.11","v4.11-rc1","v4.11-rc2","v4.11-rc3","v4.11-rc4","v4.11-rc5","v4.11-rc6","v4.11-rc7","v4.11-rc8","v4.12","v4.12-rc1","v4.12-rc2","v4.12-rc3","v4.12-rc4","v4.12-rc5","v4.12-rc6","v4.12-rc7","v4.13","v4.13-rc1","v4.13-rc2","v4.13-rc3","v4.13-rc4","v4.13-rc5","v4.13-rc6","v4.13-rc7","v4.14","v4.14-rc1","v4.14-rc2","v4.14-rc3","v4.14-rc4","v4.14-rc5","v4.14-rc6","v4.14-rc7","v4.14-rc8","v4.15","v4.15-rc1","v4.15-rc2","v4.15-rc3","v4.15-rc4","v4.15-rc5","v4.15-rc6","v4.15-rc7","v4.15-rc8","v4.15-rc9","v4.16","v4.16-rc1","v4.16-rc2","v4.16-rc3","v4.16-rc4","v4.16-rc5","v4.16-rc6","v4.16-rc7","v4.17","v4.17-rc1","v4.17-rc2","v4.17-rc3","v4.17-rc4","v4.17-rc5","v4.17-rc6","v4.17-rc7","v4.18","v4.18-rc1","v4.18-rc2","v4.18-rc3","v4.18-rc4","v4.18-rc5","v4.18-rc6","v4.18-rc7","v4.18-rc8","v4.19","v4.19-rc1","v4.19-rc2","v4.19-rc3","v4.19-rc4","v4.19-rc5","v4.19-rc6","v4.19-rc7","v4.19-rc8","v4.20","v4.20-rc1","v4.20-rc2","v4.20-rc3","v4.20-rc4","v4.20-rc5","v4.20-rc6","v4.20-rc7","v4.3","v4.3-rc1","v4.3-rc2","v4.3-rc3","v4.3-rc4","v4.3-rc5","v4.3-rc6","v4.3-rc7","v4.4","v4.4-rc1","v4.4-rc2","v4.4-rc3","v4.4-rc4","v4.4-rc5","v4.4-rc6","v4.4-rc7","v4.4-rc8","v4.5","v4.5-rc1","v4.5-rc2","v4.5-rc3","v4.5-rc4","v4.5-rc5","v4.5-rc6","v4.5-rc7","v4.6","v4.6-rc1","v4.6-rc2","v4.6-rc3","v4.6-rc4","v4.6-rc5","v4.6-rc6","v4.6-rc7","v4.7","v4.7-rc1","v4.7-rc2","v4.7-rc3","v4.7-rc4","v4.7-rc5","v4.7-rc6","v4.7-rc7","v4.8","v4.8-rc1","v4.8-rc2","v4.8-rc3","v4.8-rc4","v4.8-rc5","v4.8-rc6","v4.8-rc7","v4.8-rc8","v4.9","v4.9-rc1","v4.9-rc2","v4.9-rc3","v4.9-rc4","v4.9-rc5","v4.9-rc6","v4.9-rc7","v4.9-rc8","v5.0","v5.0-rc1","v5.0-rc2","v5.0-rc3","v5.0-rc4","v5.0-rc5","v5.0-rc6","v5.0-rc7","v5.0-rc8","v5.1","v5.1-rc1","v5.1-rc2","v5.1-rc3","v5.1-rc4","v5.1-rc5","v5.1-rc6","v5.1-rc7","v5.10","v5.10-rc1","v5.10-rc2","v5.10-rc3","v5.10-rc4","v5.10-rc5","v5.10-rc6","v5.10-rc7","v5.11","v5.11-rc1","v5.11-rc2","v5.11-rc3","v5.11-rc4","v5.11-rc5","v5.11-rc6","v5.11-rc7","v5.12","v5.12-rc1","v5.12-rc1-dontuse","v5.12-rc2","v5.12-rc3","v5.12-rc4","v5.12-rc5","v5.12-rc6","v5.12-rc7","v5.12-rc8","v5.13","v5.13-rc1","v5.13-rc2","v5.13-rc3","v5.13-rc4","v5.13-rc5","v5.13-rc6","v5.13-rc7","v5.14","v5.14-rc1","v5.14-rc2","v5.14-rc3","v5.14-rc4","v5.14-rc5","v5.14-rc6","v5.14-rc7","v5.15","v5.15-rc1","v5.15-rc2","v5.15-rc3","v5.15-rc4","v5.15-rc5","v5.15-rc6","v5.15-rc7","v5.16","v5.16-rc1","v5.16-rc2","v5.16-rc3","v5.16-rc4","v5.16-rc5","v5.16-rc6","v5.16-rc7","v5.16-rc8","v5.17","v5.17-rc1","v5.17-rc2","v5.17-rc3","v5.17-rc4","v5.17-rc5","v5.17-rc6","v5.17-rc7","v5.17-rc8","v5.18","v5.18-rc1","v5.18-rc2","v5.18-rc3","v5.18-rc4","v5.18-rc5","v5.18-rc6","v5.18-rc7","v5.19","v5.19-rc1","v5.19-rc2","v5.19-rc3","v5.19-rc4","v5.19-rc5","v5.19-rc6","v5.19-rc7","v5.19-rc8","v5.2","v5.2-rc1","v5.2-rc2","v5.2-rc3","v5.2-rc4","v5.2-rc5","v5.2-rc6","v5.2-rc7","v5.3","v5.3-rc1","v5.3-rc2","v5.3-rc3","v5.3-rc4","v5.3-rc5","v5.3-rc6","v5.3-rc7","v5.3-rc8","v5.4","v5.4-rc1","v5.4-rc2","v5.4-rc3","v5.4-rc4","v5.4-rc5","v5.4-rc6","v5.4-rc7","v5.4-rc8","v5.5","v5.5-rc1","v5.5-rc2","v5.5-rc3","v5.5-rc4","v5.5-rc5","v5.5-rc6","v5.5-rc7","v5.6","v5.6-rc1","v5.6-rc2","v5.6-rc3","v5.6-rc4","v5.6-rc5","v5.6-rc6","v5.6-rc7","v5.7","v5.7-rc1","v5.7-rc2","v5.7-rc3","v5.7-rc4","v5.7-rc5","v5.7-rc6","v5.7-rc7","v5.8","v5.8-rc1","v5.8-rc2","v5.8-rc3","v5.8-rc4","v5.8-rc5","v5.8-rc6","v5.8-rc7","v5.9","v5.9-rc1","v5.9-rc2","v5.9-rc3","v5.9-rc4","v5.9-rc5","v5.9-rc6","v5.9-rc7","v5.9-rc8","v6.0","v6.0-rc1","v6.0-rc2","v6.0-rc3","v6.0-rc4","v6.0-rc5","v6.0-rc6","v6.0-rc7","v6.1","v6.1-rc1","v6.1-rc2","v6.1-rc3","v6.1-rc4","v6.1-rc5","v6.1-rc6","v6.1-rc7","v6.1-rc8","v6.10","v6.10-rc1","v6.10-rc2","v6.10-rc3","v6.10-rc4","v6.10-rc5","v6.10-rc6","v6.10-rc7","v6.10.1","v6.10.2","v6.10.3","v6.10.4","v6.10.5","v6.10.6","v6.10.7","v6.10.8","v6.10.9","v6.11-rc1","v6.11-rc2","v6.11-rc3","v6.11-rc4","v6.11-rc5","v6.11-rc6","v6.2","v6.2-rc1","v6.2-rc2","v6.2-rc3","v6.2-rc4","v6.2-rc5","v6.2-rc6","v6.2-rc7","v6.2-rc8","v6.3","v6.3-rc1","v6.3-rc2","v6.3-rc3","v6.3-rc4","v6.3-rc5","v6.3-rc6","v6.3-rc7","v6.4","v6.4-rc1","v6.4-rc2","v6.4-rc3","v6.4-rc4","v6.4-rc5","v6.4-rc6","v6.4-rc7","v6.5","v6.5-rc1","v6.5-rc2","v6.5-rc3","v6.5-rc4","v6.5-rc5","v6.5-rc6","v6.5-rc7","v6.6","v6.6-rc1","v6.6-rc2","v6.6-rc3","v6.6-rc4","v6.6-rc5","v6.6-rc6","v6.6-rc7","v6.6.1","v6.6.10","v6.6.11","v6.6.12","v6.6.13","v6.6.14","v6.6.15","v6.6.16","v6.6.17","v6.6.18","v6.6.19","v6.6.2","v6.6.20","v6.6.21","v6.6.22","v6.6.23","v6.6.24","v6.6.25","v6.6.26","v6.6.27","v6.6.28","v6.6.29","v6.6.3","v6.6.30","v6.6.31","v6.6.32","v6.6.33","v6.6.34","v6.6.35","v6.6.36","v6.6.37","v6.6.38","v6.6.39","v6.6.4","v6.6.40","v6.6.41","v6.6.42","v6.6.43","v6.6.44","v6.6.45","v6.6.46","v6.6.47","v6.6.48","v6.6.49","v6.6.5","v6.6.50","v6.6.6","v6.6.7","v6.6.8","v6.6.9","v6.7","v6.7-rc1","v6.7-rc2","v6.7-rc3","v6.7-rc4","v6.7-rc5","v6.7-rc6","v6.7-rc7","v6.7-rc8","v6.8","v6.8-rc1","v6.8-rc2","v6.8-rc3","v6.8-rc4","v6.8-rc5","v6.8-rc6","v6.8-rc7","v6.9","v6.9-rc1","v6.9-rc2","v6.9-rc3","v6.9-rc4","v6.9-rc5","v6.9-rc6","v6.9-rc7"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-46787.json"}},{"package":{"name":"Kernel","ecosystem":"Linux"},"ranges":[{"type":"ECOSYSTEM","events":[{"introduced":"4.3.0"},{"fixed":"6.6.51"}]},{"type":"ECOSYSTEM","events":[{"introduced":"6.7.0"},{"fixed":"6.10.10"}]}],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-46787.json"}}],"references":[{"type":"PACKAGE","url":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"},{"type":"WEB","url":"https://git.kernel.org/stable/c/3c6b4bcf37845c9359aed926324bed66bdd2448d"},{"type":"WEB","url":"https://git.kernel.org/stable/c/71c186efc1b2cf1aeabfeff3b9bd5ac4c5ac14d8"},{"type":"WEB","url":"https://git.kernel.org/stable/c/98cc18b1b71e23fe81a5194ed432b20c2d81a01a"}]}