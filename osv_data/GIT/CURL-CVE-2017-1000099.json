{
  "affected": [
    {
      "database_specific": {
        "source": "https://curl.se/docs/CURL-CVE-2017-1000099.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "7.54.1"
            },
            {
              "fixed": "7.55.0"
            }
          ],
          "type": "SEMVER"
        },
        {
          "events": [
            {
              "introduced": "7c312f84ea930d89c0f0f774b50032c4f9ae30e4"
            },
            {
              "fixed": "c9332fa5e84f24da300b42b1a931ade929d3e27d"
            }
          ],
          "repo": "https://github.com/curl/curl.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "7.54.1"
      ]
    }
  ],
  "aliases": [
    "CVE-2017-1000099"
  ],
  "credits": [
    {
      "name": "Even Rouault",
      "type": "FINDER"
    },
    {
      "name": "Even Rouault",
      "type": "REMEDIATION_DEVELOPER"
    }
  ],
  "database_specific": {
    "CWE": {
      "desc": "Improper Null Termination",
      "id": "CWE-170"
    },
    "URL": "https://curl.se/docs/CVE-2017-1000099.json",
    "affects": "both",
    "last_affected": "7.54.1",
    "package": "curl",
    "severity": "Medium",
    "www": "https://curl.se/docs/CVE-2017-1000099.html"
  },
  "details": "When asking to get a file from a file:// URL, libcurl provides a feature that\noutputs meta-data about the file using HTTP-like headers.\n\nThe code doing this would send the wrong buffer to the user (stdout or the\napplication's provide callback), which could lead to other private data from\nthe heap to get inadvertently displayed.\n\nThe wrong buffer was an uninitialized memory area allocated on the heap and if\nit turned out to not contain any zero byte, it would continue and display the\ndata following that buffer in memory.",
  "id": "CURL-CVE-2017-1000099",
  "modified": "2024-01-25T02:42:47.151485Z",
  "published": "2017-08-09T08:00:00Z",
  "schema_version": "1.7.3",
  "summary": "FILE buffer read out of bounds"
}