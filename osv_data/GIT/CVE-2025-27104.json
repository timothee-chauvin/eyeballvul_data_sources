{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-27104.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "8a93dd27de503b0a3ace36d961a10c9ea4adee8b"
            }
          ],
          "repo": "https://github.com/vyperlang/vyper",
          "type": "GIT"
        }
      ],
      "versions": [
        "0.2.1",
        "pre-release",
        "v0.0.4",
        "v0.1.0-beta.1",
        "v0.1.0-beta.10",
        "v0.1.0-beta.11",
        "v0.1.0-beta.12",
        "v0.1.0-beta.13",
        "v0.1.0-beta.14",
        "v0.1.0-beta.15",
        "v0.1.0-beta.16",
        "v0.1.0-beta.17",
        "v0.1.0-beta.2",
        "v0.1.0-beta.3",
        "v0.1.0-beta.4",
        "v0.1.0-beta.5",
        "v0.1.0-beta.6",
        "v0.1.0-beta.7",
        "v0.1.0-beta.8",
        "v0.1.0-beta.9",
        "v0.2.0",
        "v0.2.1",
        "v0.2.10",
        "v0.2.11",
        "v0.2.12",
        "v0.2.13",
        "v0.2.14",
        "v0.2.15",
        "v0.2.16",
        "v0.2.2",
        "v0.2.3",
        "v0.2.4",
        "v0.2.5",
        "v0.2.6",
        "v0.2.7",
        "v0.2.8",
        "v0.2.9",
        "v0.3.0",
        "v0.3.1",
        "v0.3.10",
        "v0.3.10rc1",
        "v0.3.10rc2",
        "v0.3.10rc3",
        "v0.3.10rc4",
        "v0.3.10rc5",
        "v0.3.2",
        "v0.3.3",
        "v0.3.4",
        "v0.3.5",
        "v0.3.6",
        "v0.3.7",
        "v0.3.8",
        "v0.3.9",
        "v0.4.0",
        "v0.4.0b1",
        "v0.4.0b2",
        "v0.4.0b3",
        "v0.4.0b4",
        "v0.4.0b5",
        "v0.4.0b6",
        "v0.4.0rc1",
        "v0.4.0rc2",
        "v0.4.0rc3",
        "v0.4.0rc4",
        "v0.4.0rc5",
        "v0.4.0rc6",
        "v0.4.1b1",
        "v0.4.1b2",
        "v0.4.1b3",
        "v0.4.1b4",
        "v0.4.1rc1",
        "v0.4.1rc2",
        "v0.4.1rc3"
      ]
    }
  ],
  "aliases": [
    "GHSA-h33q-mhmp-8p67",
    "PYSEC-2025-30"
  ],
  "details": "vyper is a Pythonic Smart Contract Language for the EVM. Multiple evaluation of a single expression is possible in the iterator target of a for loop. While the iterator expression cannot produce multiple writes, it can consume side effects produced in the loop body (e.g. read a storage variable updated in the loop body) and thus lead to unexpected program behavior. Specifically, reads in iterators which contain an ifexp (e.g. `for s: uint256 in ([read(), read()] if True else [])`) may interleave reads with writes in the loop body. Vyper for loops allow two kinds of iterator targets, namely the `range()` builtin and an iterable type, like SArray and DArray. During codegen, iterable lists are required to not produce any side-effects (in the following code, `range_scope` forces `iter_list` to be parsed in a constant context, which is checked against `is_constant`). However, this does not prevent the iterator from consuming side effects provided by the body of the loop. For SArrays on the other hand, `iter_list` is instantiated in the body of a `repeat` ir, so it can be evaluated several times. This issue is being addressed and is expected to be available in version 0.4.1. Users are advised to upgrade as soon as the patched release is available. There are no known workarounds for this vulnerability.",
  "id": "CVE-2025-27104",
  "modified": "2025-10-15T22:55:38.618733Z",
  "published": "2025-02-21T21:32:24Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-h33q-mhmp-8p67"
    },
    {
      "type": "FIX",
      "url": "https://github.com/vyperlang/vyper/pull/4488"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:L/UI:N/VC:L/VI:L/VA:N/SC:N/SI:N/SA:N",
      "type": "CVSS_V4"
    }
  ],
  "summary": "double eval in For List Iter in Vyper"
}