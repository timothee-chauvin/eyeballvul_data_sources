{"schema_version":"1.7.3","id":"CVE-2021-29482","published":"2021-04-28T19:15:08Z","modified":"2025-10-21T06:05:55.984920Z","aliases":["GHSA-25xm-hr59-7c27","GO-2020-0016"],"related":["GHSA-25xm-hr59-7c27"],"details":"xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.","affected":[{"ranges":[{"type":"GIT","repo":"https://github.com/ulikunitz/xz","events":[{"introduced":"0"},{"fixed":"69c6093c7b2397b923acf82cb378f55ab2652b9b"}]}],"versions":["v0.1","v0.2","v0.3","v0.3.1","v0.4","v0.4.1","v0.5","v0.5.1","v0.5.2","v0.5.3","v0.5.4","v0.5.5","v0.5.6","v0.5.7"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-29482.json"}}],"references":[{"type":"FIX","url":"https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"},{"type":"ADVISORY","url":"https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"}],"severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}]}