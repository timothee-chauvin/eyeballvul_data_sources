{
  "id": "CVE-2021-39216",
  "details": "Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime from version 0.19.0 and before version 0.30.0 there was a use-after-free bug when passing `externref`s from the host to guest Wasm content. To trigger the bug, you have to explicitly pass multiple `externref`s from the host to a Wasm instance at the same time, either by passing multiple `externref`s as arguments from host code to a Wasm function, or returning multiple `externref`s to Wasm from a multi-value return function defined in the host. If you do not have host code that matches one of these shapes, then you are not impacted. If Wasmtime's `VMExternRefActivationsTable` became filled to capacity after passing the first `externref` in, then passing in the second `externref` could trigger a garbage collection. However the first `externref` is not rooted until we pass control to Wasm, and therefore could be reclaimed by the collector if nothing else was holding a reference to it or otherwise keeping it alive. Then, when control was passed to Wasm after the garbage collection, Wasm could use the first `externref`, which at this point has already been freed. We have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare. The bug has been fixed, and users should upgrade to Wasmtime 0.30.0. If you cannot upgrade Wasmtime yet, you can avoid the bug by disabling reference types support in Wasmtime by passing `false` to `wasmtime::Config::wasm_reference_types`.",
  "aliases": [
    "CVE-2021-39218",
    "CVE-2021-39219",
    "GHSA-4873-36h9-wv49",
    "GHSA-q879-9g95-56mx",
    "GHSA-v4cp-h94r-m7xf",
    "PYSEC-2021-320",
    "PYSEC-2021-321",
    "PYSEC-2021-322",
    "RUSTSEC-2021-0110"
  ],
  "modified": "2025-01-15T02:02:14.848215Z",
  "published": "2021-09-17T20:15:07Z",
  "related": [
    "GHSA-v4cp-h94r-m7xf"
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf"
    },
    {
      "type": "FIX",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/101998733b74624cbd348a2366d05760b40181f3"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/wasmtime"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/"
    }
  ],
  "affected": [
    {
      "ranges": [
        {
          "type": "GIT",
          "repo": "https://github.com/bytecodealliance/wasmtime",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "101998733b74624cbd348a2366d05760b40181f3"
            },
            {
              "fixed": "101998733b74624cbd348a2366d05760b40181f3"
            }
          ]
        }
      ],
      "versions": [
        "cranelift-v0.60.0",
        "cranelift-v0.61.0",
        "cranelift-v0.69.0",
        "filecheck-v0.0.1",
        "v0.12.0",
        "v0.16.0",
        "v0.17.0",
        "v0.18.0",
        "v0.19.0",
        "v0.20.0",
        "v0.21.0",
        "v0.22.0",
        "v0.23.0",
        "v0.24.0",
        "v0.25.0",
        "v0.26.0",
        "v0.27.0",
        "v0.28.0",
        "v0.29.0"
      ],
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-39216.json"
      }
    }
  ],
  "schema_version": "1.6.0"
}