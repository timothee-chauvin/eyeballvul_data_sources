{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-37300.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5407435a21927ac7e8ea3dcf39631f416840b31c"
            }
          ],
          "repo": "https://github.com/jupyterhub/oauthenticator",
          "type": "GIT"
        }
      ],
      "versions": [
        "0.10.0",
        "0.11.0",
        "0.12.0",
        "0.12.1",
        "0.12.3",
        "0.13.0",
        "0.2.0",
        "0.3.0",
        "0.4.0",
        "0.4.1",
        "0.5.0",
        "0.5.1",
        "0.6.0",
        "0.6.1",
        "0.7.0",
        "0.7.1",
        "0.7.2",
        "0.8.0",
        "0.8.1",
        "0.8.2",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "15.0.0",
        "15.0.1",
        "15.1.0",
        "16.0.0",
        "16.0.1",
        "16.0.2",
        "16.0.3",
        "16.0.4",
        "16.0.5",
        "16.0.6",
        "16.0.7",
        "16.1.0",
        "16.1.1",
        "16.2.0",
        "16.2.1",
        "16.3.0"
      ]
    }
  ],
  "aliases": [
    "GHSA-gprj-3p75-f996"
  ],
  "details": "OAuthenticator is software that allows OAuth2 identity providers to be plugged in and used with JupyterHub. JupyterHub < 5.0, when used with `GlobusOAuthenticator`, could be configured to allow all users from a particular institution only. This worked fine prior to JupyterHub 5.0, because `allow_all` did not take precedence over `identity_provider`. Since JupyterHub 5.0, `allow_all` does take precedence over `identity_provider`. On a hub with the same config, now all users will be allowed to login, regardless of `identity_provider`. `identity_provider` will basically be ignored. This is a documented change in JupyterHub 5.0, but is likely to catch many users by surprise. OAuthenticator 16.3.1 fixes the issue with JupyterHub 5.0, and does not affect previous versions. As a workaround, do not upgrade to JupyterHub 5.0 when using `GlobusOAuthenticator` in the prior configuration.",
  "id": "CVE-2024-37300",
  "modified": "2025-10-15T10:54:52.281824Z",
  "published": "2024-06-12T15:20:20Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/jupyterhub/oauthenticator/security/advisories/GHSA-gprj-3p75-f996"
    },
    {
      "type": "FIX",
      "url": "https://github.com/jupyterhub/oauthenticator/commit/d1aea05fa89f2beae15ab0fa0b0d071030f79654"
    },
    {
      "type": "WEB",
      "url": "https://jupyterhub.readthedocs.io/en/stable/howto/upgrading-v5.html#authenticator-allow-all-and-allow-existing-users"
    }
  ],
  "related": [
    "CGA-qwcg-8rgg-jfqm"
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
      "type": "CVSS_V3"
    }
  ],
  "summary": "Globus `identity_provider` restriction ignored when used with `allow_all` in JupyterHub 5.0"
}