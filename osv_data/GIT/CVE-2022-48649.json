{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-48649.json",
        "vanir_signatures": [
          {
            "deprecated": false,
            "digest": {
              "function_hash": "192746349992922209968417156848742796757",
              "length": 492.0
            },
            "id": "CVE-2022-48649-8573ee25",
            "signature_type": "Function",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@c673c6ceac53fb2e631c9fbbd79957099a08927f",
            "target": {
              "file": "mm/slab_common.c",
              "function": "kmem_cache_destroy"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "line_hashes": [
                "135622402269080509341279542204616942122",
                "337540067360844172518858777850094096008",
                "39858172087808749577297405837310931504",
                "14248205142690431408668485894995853861",
                "314608865544236109539394157474603516572",
                "174946191119010604911878928792312539675",
                "150810139199975302972815797484910519422",
                "327358800134008651725218418007813785215",
                "313934161519665829747517583697639797427",
                "118601141434248296103541636210861057880",
                "328195146670271732651256536698788880421"
              ],
              "threshold": 0.9
            },
            "id": "CVE-2022-48649-ae8411d3",
            "signature_type": "Line",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@c673c6ceac53fb2e631c9fbbd79957099a08927f",
            "target": {
              "file": "mm/slab_common.c"
            }
          }
        ]
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "357321557920c805de2b14832002465c320eea4f"
            },
            {
              "fixed": "c673c6ceac53fb2e631c9fbbd79957099a08927f"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "0495e337b7039191dfce6e03f5f830454b1fae6b"
            },
            {
              "fixed": "d71608a877362becdc94191f190902fac1e64d35"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "v5.19.10",
        "v5.19.11",
        "v5.19.8",
        "v5.19.9"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-48649.json"
      },
      "package": {
        "ecosystem": "Linux",
        "name": "Kernel"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "5.19.8"
            },
            {
              "fixed": "5.19.12"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/slab_common: fix possible double free of kmem_cache\n\nWhen doing slub_debug test, kfence's 'test_memcache_typesafe_by_rcu'\nkunit test case cause a use-after-free error:\n\n  BUG: KASAN: use-after-free in kobject_del+0x14/0x30\n  Read of size 8 at addr ffff888007679090 by task kunit_try_catch/261\n\n  CPU: 1 PID: 261 Comm: kunit_try_catch Tainted: G    B            N 6.0.0-rc5-next-20220916 #17\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x34/0x48\n   print_address_description.constprop.0+0x87/0x2a5\n   print_report+0x103/0x1ed\n   kasan_report+0xb7/0x140\n   kobject_del+0x14/0x30\n   kmem_cache_destroy+0x130/0x170\n   test_exit+0x1a/0x30\n   kunit_try_run_case+0xad/0xc0\n   kunit_generic_run_threadfn_adapter+0x26/0x50\n   kthread+0x17b/0x1b0\n   </TASK>\n\nThe cause is inside kmem_cache_destroy():\n\nkmem_cache_destroy\n    acquire lock/mutex\n    shutdown_cache\n        schedule_work(kmem_cache_release) (if RCU flag set)\n    release lock/mutex\n    kmem_cache_release (if RCU flag not set)\n\nIn some certain timing, the scheduled work could be run before\nthe next RCU flag checking, which can then get a wrong value\nand lead to double kmem_cache_release().\n\nFix it by caching the RCU flag inside protected area, just like 'refcnt'",
  "id": "CVE-2022-48649",
  "modified": "2025-10-14T19:47:27.906089Z",
  "published": "2024-04-28T13:00:33Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/c673c6ceac53fb2e631c9fbbd79957099a08927f"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/d71608a877362becdc94191f190902fac1e64d35"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "mm/slab_common: fix possible double free of kmem_cache"
}