{
  "id": "CVE-2024-43804",
  "details": "Roxy-WI is a web interface for managing Haproxy, Nginx, Apache and Keepalived servers. An OS Command Injection vulnerability allows any authenticated user on the application to execute arbitrary code on the web application server via port scanning functionality. User-supplied input is used without validation when constructing and executing an OS command. User supplied JSON POST data is parsed and if \"id\" JSON key does not exist, JSON value supplied via \"ip\" JSON key is assigned to the \"ip\" variable. Later on, \"ip\" variable which can be controlled by the attacker is used when constructing the cmd and cmd1 strings without any extra validation. Then, server_mod.subprocess_execute function is called on both cmd1 and cmd2. When the definition of the server_mod.subprocess_execute() function is analyzed, it can be seen that subprocess.Popen() is called on the input parameter with shell=True which results in OS Command Injection. This issue has not yet been patched. Users are advised to contact the Roxy-WI to coordinate a fix.",
  "aliases": [
    "GHSA-qc52-vwwj-5585"
  ],
  "modified": "2024-10-08T04:27:24.876404Z",
  "published": "2024-08-29T17:15:08Z",
  "references": [
    {
      "type": "EVIDENCE",
      "url": "https://github.com/roxy-wi/roxy-wi/security/advisories/GHSA-qc52-vwwj-5585"
    }
  ],
  "affected": [
    {
      "ranges": [
        {
          "type": "GIT",
          "repo": "https://github.com/hap-wi/roxy-wi",
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "69e5c2cca9c025fdc978dde542be30f582f4982e"
            }
          ]
        }
      ],
      "versions": [
        "3.4.4.6",
        "3.4.4.7",
        "3.4.5",
        "3.4.5.1",
        "v.5.3.5.0",
        "v1.0",
        "v1.1",
        "v1.10",
        "v1.10.1",
        "v1.10.2",
        "v1.10.2.1",
        "v1.3",
        "v1.4",
        "v1.4.1",
        "v1.6",
        "v1.9.1",
        "v2.0.2",
        "v3.2.13",
        "v3.3",
        "v4.4.1.0",
        "v5.1.1.0",
        "v5.1.4.0",
        "v5.2.0",
        "v5.2.1",
        "v5.2.2.0",
        "v5.2.3.0",
        "v5.2.4.0",
        "v5.2.5.0",
        "v5.2.6.0",
        "v5.3.0.0",
        "v5.3.1.0",
        "v5.3.2.0",
        "v5.3.3.0",
        "v5.3.4.0",
        "v5.3.6.0",
        "v5.4.0.0",
        "v5.4.1.0",
        "v5.4.2.0",
        "v5.4.3.0",
        "v5.5.0.0",
        "v5.5.1.0",
        "v6.0.0.0",
        "v6.0.1.0",
        "v6.0.2.0",
        "v6.0.3.0",
        "v6.1.0.0",
        "v6.1.1.0",
        "v6.1.2.0",
        "v6.1.3.0",
        "v6.1.4.0",
        "v6.1.5.0",
        "v6.2.0.0",
        "v6.2.1.0",
        "v6.2.2.0",
        "v6.2.3.0",
        "v6.3.0.0",
        "v6.3.1.0",
        "v6.3.10.0",
        "v6.3.11.0",
        "v6.3.12.0",
        "v6.3.13.0",
        "v6.3.14.0",
        "v6.3.15.0",
        "v6.3.16.0",
        "v6.3.17.0",
        "v6.3.18.0",
        "v6.3.19.0",
        "v6.3.2.0",
        "v6.3.3.0",
        "v6.3.4.0",
        "v6.3.5.0",
        "v6.3.6.0",
        "v6.3.7.0",
        "v6.3.8.0",
        "v6.3.9.0",
        "v7.0.0.0",
        "v7.0.1.0",
        "v7.0.2.0",
        "v7.0.3.0",
        "v7.0.4.0",
        "v7.1.0.0",
        "v7.1.1.0",
        "v7.1.2.0",
        "v7.2.0.0",
        "v7.2.1.0",
        "v7.2.2.0",
        "v7.2.3.0",
        "v7.2.4.0",
        "v7.2.5.0",
        "v7.2.6.0",
        "v7.3.0.0",
        "v7.3.1.0",
        "v7.3.2.0",
        "v8.0"
      ],
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-43804.json"
      }
    }
  ],
  "schema_version": "1.6.0",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ]
}