{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-26625.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "b351a8bf6cec53b520213f47d37693fc4c096e69"
            },
            {
              "fixed": "b84b33847fe6458f36ef521534dc0eac953cb379"
            }
          ],
          "repo": "https://github.com/git-lfs/git-lfs",
          "type": "GIT"
        }
      ],
      "versions": [
        "v0.5.2",
        "v0.5.3",
        "v0.6.0",
        "v1.0.0",
        "v1.0.1",
        "v1.0.2",
        "v1.1.0",
        "v1.1.1",
        "v1.1.1-pre-push-tracing",
        "v1.1.2",
        "v1.2.0",
        "v1.3.0",
        "v1.3.1",
        "v1.4.0",
        "v1.4.1",
        "v1.4.2",
        "v1.4.3",
        "v1.4.4",
        "v1.5.0",
        "v2.0.0",
        "v2.0.2-rc1",
        "v2.1.0",
        "v2.10.0",
        "v2.11.0",
        "v2.12.0",
        "v2.13.0",
        "v2.2.0",
        "v2.3.0",
        "v2.3.1",
        "v2.3.2",
        "v2.3.3",
        "v2.3.4",
        "v2.4.0",
        "v2.5.0",
        "v2.6.0",
        "v2.7.0",
        "v2.8.0",
        "v2.9.0",
        "v3.0.0",
        "v3.1.0",
        "v3.2.0",
        "v3.3.0",
        "v3.4.0",
        "v3.5.0",
        "v3.6.0",
        "v3.7.0"
      ]
    }
  ],
  "aliases": [
    "GHSA-6pvw-g552-53c5"
  ],
  "details": "Git LFS is a Git extension for versioning large files. In Git LFS versions 0.5.2 through 3.7.0, when populating a Git repository's working tree with the contents of Git LFS objects, certain Git LFS commands may write to files visible outside the current Git working tree if symbolic or hard links exist which collide with the paths of files tracked by Git LFS. The git lfs checkout and git lfs pull commands do not check for symbolic links before writing to files in the working tree, allowing an attacker to craft a repository containing symbolic or hard links that cause Git LFS to write to arbitrary file system locations accessible to the user running these commands. As well, when the git lfs checkout and git lfs pull commands are run in a bare repository, they could write to files visible outside the repository. The vulnerability is fixed in version 3.7.1. As a workaround, support for symlinks in Git may be disabled by setting the core.symlinks configuration option to false, after which further clones and fetches will not create symbolic links. However, any symbolic or hard links in existing repositories will still provide the opportunity for Git LFS to write to their targets.",
  "id": "CVE-2025-26625",
  "modified": "2025-10-17T19:42:04.567975Z",
  "published": "2025-10-17T15:30:14Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/git-lfs/git-lfs/security/advisories/GHSA-6pvw-g552-53c5"
    },
    {
      "type": "FIX",
      "url": "https://github.com/git-lfs/git-lfs/commit/0cffe93176b870055c9dadbb3cc9a4a440e98396"
    },
    {
      "type": "FIX",
      "url": "https://github.com/git-lfs/git-lfs/commit/5c11ffce9a4f095ff356bc781e2a031abb46c1a8"
    },
    {
      "type": "FIX",
      "url": "https://github.com/git-lfs/git-lfs/commit/d02bd13f02ef76f6807581cd6b34709069cb3615"
    },
    {
      "type": "WEB",
      "url": "https://github.com/git-lfs/git-lfs/releases/tag/v3.7.1"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:P/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N",
      "type": "CVSS_V4"
    }
  ],
  "summary": "Git LFS may write to arbitrary files via crafted symlinks"
}