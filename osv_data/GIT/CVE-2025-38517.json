{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-38517.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "1438d349d16b78d88f9e978a4a5496f078c8191b"
            },
            {
              "fixed": "febc0b5dbabda414565bdfaaaa59d26f787d5fe7"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "1438d349d16b78d88f9e978a4a5496f078c8191b"
            },
            {
              "fixed": "22bf79c0c2301b6e15a688220284b147774d277e"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "1438d349d16b78d88f9e978a4a5496f078c8191b"
            },
            {
              "fixed": "99af22cd34688cc0d535a1919e0bea4cbc6c1ea1"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "v6.10",
        "v6.10-rc1",
        "v6.10-rc2",
        "v6.10-rc3",
        "v6.10-rc4",
        "v6.10-rc5",
        "v6.10-rc6",
        "v6.10-rc7",
        "v6.11",
        "v6.11-rc1",
        "v6.11-rc2",
        "v6.11-rc3",
        "v6.11-rc4",
        "v6.11-rc5",
        "v6.11-rc6",
        "v6.11-rc7",
        "v6.12",
        "v6.12-rc1",
        "v6.12-rc2",
        "v6.12-rc3",
        "v6.12-rc4",
        "v6.12-rc5",
        "v6.12-rc6",
        "v6.12-rc7",
        "v6.12.1",
        "v6.12.10",
        "v6.12.11",
        "v6.12.12",
        "v6.12.13",
        "v6.12.14",
        "v6.12.15",
        "v6.12.16",
        "v6.12.17",
        "v6.12.18",
        "v6.12.19",
        "v6.12.2",
        "v6.12.20",
        "v6.12.21",
        "v6.12.22",
        "v6.12.23",
        "v6.12.24",
        "v6.12.25",
        "v6.12.26",
        "v6.12.27",
        "v6.12.28",
        "v6.12.29",
        "v6.12.3",
        "v6.12.30",
        "v6.12.31",
        "v6.12.32",
        "v6.12.33",
        "v6.12.34",
        "v6.12.35",
        "v6.12.36",
        "v6.12.37",
        "v6.12.38",
        "v6.12.4",
        "v6.12.5",
        "v6.12.6",
        "v6.12.7",
        "v6.12.8",
        "v6.12.9",
        "v6.13",
        "v6.13-rc1",
        "v6.13-rc2",
        "v6.13-rc3",
        "v6.13-rc4",
        "v6.13-rc5",
        "v6.13-rc6",
        "v6.13-rc7",
        "v6.14",
        "v6.14-rc1",
        "v6.14-rc2",
        "v6.14-rc3",
        "v6.14-rc4",
        "v6.14-rc5",
        "v6.14-rc6",
        "v6.14-rc7",
        "v6.15",
        "v6.15-rc1",
        "v6.15-rc2",
        "v6.15-rc3",
        "v6.15-rc4",
        "v6.15-rc5",
        "v6.15-rc6",
        "v6.15-rc7",
        "v6.15.1",
        "v6.15.2",
        "v6.15.3",
        "v6.15.4",
        "v6.15.5",
        "v6.15.6",
        "v6.16-rc1",
        "v6.16-rc2",
        "v6.16-rc3",
        "v6.16-rc4",
        "v6.16-rc5",
        "v6.9",
        "v6.9-rc5",
        "v6.9-rc6",
        "v6.9-rc7"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-38517.json"
      },
      "package": {
        "ecosystem": "Linux",
        "name": "Kernel"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "6.10.0"
            },
            {
              "fixed": "6.12.39"
            }
          ],
          "type": "ECOSYSTEM"
        },
        {
          "events": [
            {
              "introduced": "6.13.0"
            },
            {
              "fixed": "6.15.7"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nlib/alloc_tag: do not acquire non-existent lock in alloc_tag_top_users()\n\nalloc_tag_top_users() attempts to lock alloc_tag_cttype->mod_lock even\nwhen the alloc_tag_cttype is not allocated because:\n\n  1) alloc tagging is disabled because mem profiling is disabled\n     (!alloc_tag_cttype)\n  2) alloc tagging is enabled, but not yet initialized (!alloc_tag_cttype)\n  3) alloc tagging is enabled, but failed initialization\n     (!alloc_tag_cttype or IS_ERR(alloc_tag_cttype))\n\nIn all cases, alloc_tag_cttype is not allocated, and therefore\nalloc_tag_top_users() should not attempt to acquire the semaphore.\n\nThis leads to a crash on memory allocation failure by attempting to\nacquire a non-existent semaphore:\n\n  Oops: general protection fault, probably for non-canonical address 0xdffffc000000001b: 0000 [#3] SMP KASAN NOPTI\n  KASAN: null-ptr-deref in range [0x00000000000000d8-0x00000000000000df]\n  CPU: 2 UID: 0 PID: 1 Comm: systemd Tainted: G      D             6.16.0-rc2 #1 VOLUNTARY\n  Tainted: [D]=DIE\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014\n  RIP: 0010:down_read_trylock+0xaa/0x3b0\n  Code: d0 7c 08 84 d2 0f 85 a0 02 00 00 8b 0d df 31 dd 04 85 c9 75 29 48 b8 00 00 00 00 00 fc ff df 48 8d 6b 68 48 89 ea 48 c1 ea 03 <80> 3c 02 00 0f 85 88 02 00 00 48 3b 5b 68 0f 85 53 01 00 00 65 ff\n  RSP: 0000:ffff8881002ce9b8 EFLAGS: 00010016\n  RAX: dffffc0000000000 RBX: 0000000000000070 RCX: 0000000000000000\n  RDX: 000000000000001b RSI: 000000000000000a RDI: 0000000000000070\n  RBP: 00000000000000d8 R08: 0000000000000001 R09: ffffed107dde49d1\n  R10: ffff8883eef24e8b R11: ffff8881002cec20 R12: 1ffff11020059d37\n  R13: 00000000003fff7b R14: ffff8881002cec20 R15: dffffc0000000000\n  FS:  00007f963f21d940(0000) GS:ffff888458ca6000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f963f5edf71 CR3: 000000010672c000 CR4: 0000000000350ef0\n  Call Trace:\n   <TASK>\n   codetag_trylock_module_list+0xd/0x20\n   alloc_tag_top_users+0x369/0x4b0\n   __show_mem+0x1cd/0x6e0\n   warn_alloc+0x2b1/0x390\n   __alloc_frozen_pages_noprof+0x12b9/0x21a0\n   alloc_pages_mpol+0x135/0x3e0\n   alloc_slab_page+0x82/0xe0\n   new_slab+0x212/0x240\n   ___slab_alloc+0x82a/0xe00\n   </TASK>\n\nAs David Wang points out, this issue became easier to trigger after commit\n780138b12381 (\"alloc_tag: check mem_profiling_support in alloc_tag_init\").\n\nBefore the commit, the issue occurred only when it failed to allocate and\ninitialize alloc_tag_cttype or if a memory allocation fails before\nalloc_tag_init() is called.  After the commit, it can be easily triggered\nwhen memory profiling is compiled but disabled at boot.\n\nTo properly determine whether alloc_tag_init() has been called and its\ndata structures initialized, verify that alloc_tag_cttype is a valid\npointer before acquiring the semaphore.  If the variable is NULL or an\nerror value, it has not been properly initialized.  In such a case, just\nskip and do not attempt to acquire the semaphore.\n\n[harry.yoo@oracle.com: v3]",
  "id": "CVE-2025-38517",
  "modified": "2025-10-16T03:19:49.452342Z",
  "published": "2025-08-16T10:55:04Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/22bf79c0c2301b6e15a688220284b147774d277e"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/99af22cd34688cc0d535a1919e0bea4cbc6c1ea1"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/febc0b5dbabda414565bdfaaaa59d26f787d5fe7"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "lib/alloc_tag: do not acquire non-existent lock in alloc_tag_top_users()"
}