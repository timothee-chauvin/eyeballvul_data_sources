{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-49364.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "fc53db79af6e2738661ea3dcaf3c4ecb8541a149"
            }
          ],
          "repo": "https://github.com/bitcoinjs/tiny-secp256k1",
          "type": "GIT"
        }
      ],
      "versions": [
        "v0.0.2",
        "v0.0.3",
        "v0.0.4",
        "v0.0.5",
        "v0.0.6",
        "v0.0.7",
        "v0.1.0",
        "v0.2.2",
        "v1.0.0",
        "v1.0.1",
        "v1.1.0",
        "v1.1.1",
        "v1.1.2",
        "v1.1.3",
        "v1.1.4",
        "v1.1.5",
        "v1.1.6"
      ]
    }
  ],
  "aliases": [
    "GHSA-7mc2-6phr-23xc"
  ],
  "details": "tiny-secp256k1 is a tiny secp256k1 native/JS wrapper. Prior to version 1.1.7, a private key can be extracted on signing a malicious JSON-stringifiable object, when global Buffer is the buffer package. This affects only environments where require('buffer') is the NPM buffer package. The Buffer.isBuffer check can be bypassed, resulting in k reuse for different messages, leading to private key extraction over a single invalid message (and a second one for which any message/signature could be taken, e.g. previously known valid one). This issue has been patched in version 1.1.7.",
  "id": "CVE-2024-49364",
  "modified": "2025-10-15T14:43:25.079733Z",
  "published": "2025-07-01T02:07:06Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/bitcoinjs/tiny-secp256k1/security/advisories/GHSA-7mc2-6phr-23xc"
    },
    {
      "type": "FIX",
      "url": "https://github.com/bitcoinjs/tiny-secp256k1/pull/140"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N/E:P",
      "type": "CVSS_V4"
    }
  ],
  "summary": "tiny-secp256k1 vulnerable to private key extraction when signing a malicious JSON-stringifyable message in bundled environment"
}