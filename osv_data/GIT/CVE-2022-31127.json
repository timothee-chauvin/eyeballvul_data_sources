{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-31127.json",
        "unresolved_versions": [
          {
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "3.29.8"
              }
            ],
            "type": ""
          }
        ]
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "29b67b664785ba086008159e69c5e22969f69b48"
            },
            {
              "fixed": "2adfadefdc14aad9fbd19d9534e9261f9bff8ede"
            }
          ],
          "repo": "https://github.com/nextauthjs/next-auth",
          "type": "GIT"
        }
      ],
      "versions": []
    }
  ],
  "aliases": [
    "GHSA-pgjx-7f9g-9463"
  ],
  "details": "NextAuth.js is a complete open source authentication solution for Next.js applications. An attacker can pass a compromised input to the e-mail [signin endpoint](https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider) that contains some malicious HTML, tricking the e-mail server to send it to the user, so they can perform a phishing attack. Eg.: `balazs@email.com, <a href=\"http://attacker.com\">Before signing in, claim your money!</a>`. This was previously sent to `balazs@email.com`, and the content of the email containing a link to the attacker's site was rendered in the HTML. This has been remedied in the following releases, by simply not rendering that e-mail in the HTML, since it should be obvious to the receiver what e-mail they used: next-auth v3 users before version 3.29.8 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. next-auth v4 users before version 4.9.0 are impacted. If for some reason you cannot upgrade, the workaround requires you to sanitize the `email` parameter that is passed to `sendVerificationRequest` and rendered in the HTML. If you haven't created a custom `sendVerificationRequest`, you only need to upgrade. Otherwise, make sure to either exclude `email` from the HTML body or efficiently sanitize it.",
  "id": "CVE-2022-31127",
  "modified": "2025-10-14T14:34:05Z",
  "published": "2022-07-06T18:00:16Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463"
    },
    {
      "type": "FIX",
      "url": "https://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0"
    },
    {
      "type": "WEB",
      "url": "https://next-auth.js.org/getting-started/upgrade-v4"
    },
    {
      "type": "WEB",
      "url": "https://next-auth.js.org/providers/email#customizing-emails"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L",
      "type": "CVSS_V3"
    }
  ],
  "summary": "Improper handling of email input in next-auth"
}