{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-24802.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "6d1b99e5ca8f8f977be4809637c06f71237d45c7"
            }
          ],
          "repo": "https://github.com/0xPolygonZero/plonky2",
          "type": "GIT"
        }
      ],
      "versions": [
        "starky-v0.2.1",
        "v0.2.0",
        "v0.2.2",
        "v0.2.3",
        "v1.0.0"
      ]
    }
  ],
  "aliases": [
    "GHSA-hj49-h7fq-px5h"
  ],
  "details": "Plonky2 is a SNARK implementation based on techniques from PLONK and FRI. Lookup tables, whose length is not divisible by 26 = floor(num_routed_wires / 3) always include the 0 -> 0 input-output pair. Thus a malicious prover can always prove that f(0) = 0 for any lookup table f (unless its length happens to be divisible by 26). The cause of problem is that the LookupTableGate-s are padded with zeros. A workaround from the user side is to extend the table (by repeating some entries) so that its length becomes divisible by 26. This vulnerability is fixed in 1.0.1.",
  "id": "CVE-2025-24802",
  "modified": "2025-10-15T22:53:13.933990Z",
  "published": "2025-01-30T19:20:14Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/0xPolygonZero/plonky2/security/advisories/GHSA-hj49-h7fq-px5h"
    },
    {
      "type": "FIX",
      "url": "https://github.com/0xPolygonZero/plonky2/commit/091047f7f10cae082716f3738ad59a583835f7b6"
    },
    {
      "type": "WEB",
      "url": "https://github.com/0xPolygonZero/plonky2/blob/main/plonky2/src/plonk/prover.rs#L97"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N",
      "type": "CVSS_V3"
    }
  ],
  "summary": "Soundness issue with Plonky2 look up tables"
}