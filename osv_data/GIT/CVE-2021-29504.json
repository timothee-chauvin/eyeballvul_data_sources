{
  "id": "CVE-2021-29504",
  "details": "WP-CLI is the command-line interface for WordPress. An improper error handling in HTTPS requests management in WP-CLI version 0.12.0 and later allows remote attackers able to intercept the communication to remotely disable the certificate verification on WP-CLI side, gaining full control over the communication content, including the ability to impersonate update servers and push malicious updates towards WordPress instances controlled by the vulnerable WP-CLI agent, or push malicious updates toward WP-CLI itself. The vulnerability stems from the fact that the default behavior of `WP_CLI\\Utils\\http_request()` when encountering a TLS handshake error is to disable certificate validation and retry the same request. The default behavior has been changed with version 2.5.0 of WP-CLI and the `wp-cli/wp-cli` framework (via https://github.com/wp-cli/wp-cli/pull/5523) so that the `WP_CLI\\Utils\\http_request()` method accepts an `$insecure` option that is `false` by default and consequently that a TLS handshake failure is a hard error by default. This new default is a breaking change and ripples through to all consumers of `WP_CLI\\Utils\\http_request()`, including those in separate WP-CLI bundled or third-party packages. https://github.com/wp-cli/wp-cli/pull/5523 has also added an `--insecure` flag to the `cli update` command to counter this breaking change. There is no direct workaround for the default insecure behavior of `wp-cli/wp-cli` versions before 2.5.0. The workaround for dealing with the breaking change in the commands directly affected by the new secure default behavior is to add the `--insecure` flag to manually opt-in to the previous insecure behavior.",
  "aliases": [
    "BIT-wp-cli-2021-29504",
    "GHSA-rwgm-f83r-v3qj"
  ],
  "modified": "2025-02-19T03:18:12.880274Z",
  "published": "2021-06-07T21:15:08Z",
  "related": [
    "GHSA-rwgm-f83r-v3qj",
    "openSUSE-SU-2024:11514-1"
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/wp-cli/wp-cli/security/advisories/GHSA-rwgm-f83r-v3qj"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wp-cli/checksum-command/pull/86"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wp-cli/config-command/pull/128"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wp-cli/core-command/pull/186"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wp-cli/extension-command/pull/287"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wp-cli/wp-cli/pull/5523"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wp-cli/package-command/pull/138"
    }
  ],
  "affected": [
    {
      "ranges": [
        {
          "type": "GIT",
          "repo": "https://github.com/wp-cli/wp-cli",
          "events": [
            {
              "introduced": "a9b9c2d37ae80c927d378cda2ede2442cbeafc0c"
            },
            {
              "fixed": "0bcf0c54f4d35685211d435e25219cc7acbe6d48"
            }
          ]
        }
      ],
      "versions": [
        "v0.12.0",
        "v0.12.1",
        "v0.13.0",
        "v0.14.0",
        "v0.15.0",
        "v0.16.0",
        "v0.17.0",
        "v0.18.0",
        "v0.19.0",
        "v0.20.0",
        "v0.21.0",
        "v0.22.0",
        "v0.23.0",
        "v0.24.0",
        "v0.25.0",
        "v1.0.0",
        "v1.1.0",
        "v1.2.0",
        "v1.2.1",
        "v1.3.0",
        "v1.4.0",
        "v1.5.0",
        "v2.0.0",
        "v2.0.1",
        "v2.1.0",
        "v2.2.0",
        "v2.3.0",
        "v2.4.0",
        "v2.4.1"
      ],
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-29504.json"
      }
    }
  ],
  "schema_version": "1.6.0",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  ]
}