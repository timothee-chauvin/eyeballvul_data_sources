{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-37894.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "c9d1d23e5239f41700be69133a5769ac5ebc88a8"
            },
            {
              "fixed": "c0dba059b118b5206e755042b15b49368a388898"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "c9d1d23e5239f41700be69133a5769ac5ebc88a8"
            },
            {
              "fixed": "786650e644c5b1c063921799ca203c0b8670d79a"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "c9d1d23e5239f41700be69133a5769ac5ebc88a8"
            },
            {
              "fixed": "f920436a44295ca791ebb6dae3f4190142eec703"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "v6.10",
        "v6.10-rc1",
        "v6.10-rc2",
        "v6.10-rc3",
        "v6.10-rc4",
        "v6.10-rc5",
        "v6.10-rc6",
        "v6.10-rc7",
        "v6.11",
        "v6.11-rc1",
        "v6.11-rc2",
        "v6.11-rc3",
        "v6.11-rc4",
        "v6.11-rc5",
        "v6.11-rc6",
        "v6.11-rc7",
        "v6.12",
        "v6.12-rc1",
        "v6.12-rc2",
        "v6.12-rc3",
        "v6.12-rc4",
        "v6.12-rc5",
        "v6.12-rc6",
        "v6.12-rc7",
        "v6.12.1",
        "v6.12.10",
        "v6.12.11",
        "v6.12.12",
        "v6.12.13",
        "v6.12.14",
        "v6.12.15",
        "v6.12.16",
        "v6.12.17",
        "v6.12.18",
        "v6.12.19",
        "v6.12.2",
        "v6.12.20",
        "v6.12.21",
        "v6.12.22",
        "v6.12.23",
        "v6.12.24",
        "v6.12.25",
        "v6.12.26",
        "v6.12.27",
        "v6.12.3",
        "v6.12.4",
        "v6.12.5",
        "v6.12.6",
        "v6.12.7",
        "v6.12.8",
        "v6.12.9",
        "v6.13",
        "v6.13-rc1",
        "v6.13-rc2",
        "v6.13-rc3",
        "v6.13-rc4",
        "v6.13-rc5",
        "v6.13-rc6",
        "v6.13-rc7",
        "v6.14",
        "v6.14-rc1",
        "v6.14-rc2",
        "v6.14-rc3",
        "v6.14-rc4",
        "v6.14-rc5",
        "v6.14-rc6",
        "v6.14-rc7",
        "v6.14.1",
        "v6.14.2",
        "v6.14.3",
        "v6.14.4",
        "v6.14.5",
        "v6.15-rc1",
        "v6.15-rc2",
        "v6.15-rc3",
        "v6.9",
        "v6.9-rc7"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-37894.json"
      },
      "package": {
        "ecosystem": "Linux",
        "name": "Kernel"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "6.10.0"
            },
            {
              "fixed": "6.12.28"
            }
          ],
          "type": "ECOSYSTEM"
        },
        {
          "events": [
            {
              "introduced": "6.13.0"
            },
            {
              "fixed": "6.14.6"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: use sock_gen_put() when sk_state is TCP_TIME_WAIT\n\nIt is possible for a pointer of type struct inet_timewait_sock to be\nreturned from the functions __inet_lookup_established() and\n__inet6_lookup_established(). This can cause a crash when the\nreturned pointer is of type struct inet_timewait_sock and\nsock_put() is called on it. The following is a crash call stack that\nshows sk->sk_wmem_alloc being accessed in sk_free() during the call to\nsock_put() on a struct inet_timewait_sock pointer. To avoid this issue,\nuse sock_gen_put() instead of sock_put() when sk->sk_state\nis TCP_TIME_WAIT.\n\nmrdump.ko        ipanic() + 120\nvmlinux          notifier_call_chain(nr_to_call=-1, nr_calls=0) + 132\nvmlinux          atomic_notifier_call_chain(val=0) + 56\nvmlinux          panic() + 344\nvmlinux          add_taint() + 164\nvmlinux          end_report() + 136\nvmlinux          kasan_report(size=0) + 236\nvmlinux          report_tag_fault() + 16\nvmlinux          do_tag_recovery() + 16\nvmlinux          __do_kernel_fault() + 88\nvmlinux          do_bad_area() + 28\nvmlinux          do_tag_check_fault() + 60\nvmlinux          do_mem_abort() + 80\nvmlinux          el1_abort() + 56\nvmlinux          el1h_64_sync_handler() + 124\nvmlinux        > 0xFFFFFFC080011294()\nvmlinux          __lse_atomic_fetch_add_release(v=0xF2FFFF82A896087C)\nvmlinux          __lse_atomic_fetch_sub_release(v=0xF2FFFF82A896087C)\nvmlinux          arch_atomic_fetch_sub_release(i=1, v=0xF2FFFF82A896087C)\n+ 8\nvmlinux          raw_atomic_fetch_sub_release(i=1, v=0xF2FFFF82A896087C)\n+ 8\nvmlinux          atomic_fetch_sub_release(i=1, v=0xF2FFFF82A896087C) + 8\nvmlinux          __refcount_sub_and_test(i=1, r=0xF2FFFF82A896087C,\noldp=0) + 8\nvmlinux          __refcount_dec_and_test(r=0xF2FFFF82A896087C, oldp=0) + 8\nvmlinux          refcount_dec_and_test(r=0xF2FFFF82A896087C) + 8\nvmlinux          sk_free(sk=0xF2FFFF82A8960700) + 28\nvmlinux          sock_put() + 48\nvmlinux          tcp6_check_fraglist_gro() + 236\nvmlinux          tcp6_gro_receive() + 624\nvmlinux          ipv6_gro_receive() + 912\nvmlinux          dev_gro_receive() + 1116\nvmlinux          napi_gro_receive() + 196\nccmni.ko         ccmni_rx_callback() + 208\nccmni.ko         ccmni_queue_recv_skb() + 388\nccci_dpmaif.ko   dpmaif_rxq_push_thread() + 1088\nvmlinux          kthread() + 268\nvmlinux          0xFFFFFFC08001F30C()",
  "id": "CVE-2025-37894",
  "modified": "2025-10-16T00:39:06.395153Z",
  "published": "2025-05-20T15:21:31Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/786650e644c5b1c063921799ca203c0b8670d79a"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/c0dba059b118b5206e755042b15b49368a388898"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/f920436a44295ca791ebb6dae3f4190142eec703"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "net: use sock_gen_put() when sk_state is TCP_TIME_WAIT"
}