{
  "id": "CVE-2022-35948",
  "details": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
  "aliases": [
    "GHSA-f772-66g8-q5h3"
  ],
  "modified": "2024-05-14T11:32:23.326264Z",
  "published": "2022-08-15T11:21:38Z",
  "references": [
    {
      "type": "EVIDENCE",
      "url": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
    },
    {
      "type": "FIX",
      "url": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nodejs/undici/releases/tag/v5.8.2"
    }
  ],
  "affected": [
    {
      "ranges": [
        {
          "type": "GIT",
          "repo": "https://github.com/nodejs/undici",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "66165d604fd0aee70a93ed5c44ad4cc2df395f80"
            }
          ]
        }
      ],
      "versions": [
        "v1.0.0",
        "v1.0.1",
        "v1.0.2",
        "v1.0.3",
        "v1.1.0",
        "v1.2.0",
        "v1.2.1",
        "v1.2.2",
        "v1.2.5",
        "v1.2.6",
        "v1.3.0",
        "v1.3.1",
        "v2.0.0",
        "v2.0.1",
        "v2.0.2",
        "v2.0.3",
        "v2.0.4",
        "v2.0.5",
        "v2.0.6",
        "v2.0.7",
        "v2.1.0",
        "v3.0.0",
        "v3.1.0",
        "v3.2.0",
        "v3.3.0",
        "v3.3.1",
        "v4.0.0",
        "v4.0.0-alpha.0",
        "v4.0.0-alpha.1",
        "v4.0.0-alpha.2",
        "v4.0.0-alpha.4",
        "v4.0.0-alpha.5",
        "v4.0.0-rc.1",
        "v4.0.0-rc.2",
        "v4.0.0-rc.3",
        "v4.0.0-rc.4",
        "v4.0.0-rc.5",
        "v4.0.0-rc.7",
        "v4.0.0-rc.8",
        "v4.1.0",
        "v4.1.1",
        "v4.10.0",
        "v4.10.1",
        "v4.10.2",
        "v4.10.3",
        "v4.10.4",
        "v4.11.0",
        "v4.11.1",
        "v4.11.2",
        "v4.11.3",
        "v4.12.0",
        "v4.12.2",
        "v4.13.0",
        "v4.14.0",
        "v4.14.1",
        "v4.15.0",
        "v4.15.1",
        "v4.16.0",
        "v4.2.1",
        "v4.2.2",
        "v4.3.0",
        "v4.3.1",
        "v4.4.1",
        "v4.4.2",
        "v4.4.3",
        "v4.4.4",
        "v4.4.5",
        "v4.4.6",
        "v4.4.7",
        "v4.5.0",
        "v4.5.1",
        "v4.6.0",
        "v4.7.0",
        "v4.7.1",
        "v4.7.2",
        "v4.7.3",
        "v4.8.0",
        "v4.8.1",
        "v4.8.2",
        "v4.9.0",
        "v4.9.1",
        "v4.9.2",
        "v4.9.3",
        "v4.9.4",
        "v4.9.5",
        "v5.0.0",
        "v5.1.0",
        "v5.1.1",
        "v5.2.0",
        "v5.3.0",
        "v5.4.0",
        "v5.5.0",
        "v5.5.1",
        "v5.6.0",
        "v5.6.1",
        "v5.7.0",
        "v5.8.0",
        "v5.8.1"
      ],
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2022-35948.json"
      }
    }
  ],
  "schema_version": "1.6.0",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  ]
}