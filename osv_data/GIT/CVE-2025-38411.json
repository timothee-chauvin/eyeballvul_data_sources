{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-38411.json",
        "vanir_signatures": [
          {
            "deprecated": false,
            "digest": {
              "line_hashes": [
                "58126050153634545332775336407774152779",
                "140841196763655272978490422468626599968",
                "336509229571066101721310551811708462760",
                "294680491331771583494399856805408781096"
              ],
              "threshold": 0.9
            },
            "id": "CVE-2025-38411-1213681a",
            "signature_type": "Line",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@9df7b5ebead649b00bf9a53a798e4bf83a1318fd",
            "target": {
              "file": "include/trace/events/netfs.h"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "line_hashes": [
                "95302047919006422936200756797974020967",
                "139355672308621092022893329654855989107",
                "12894963158774287129635942150767276503"
              ],
              "threshold": 0.9
            },
            "id": "CVE-2025-38411-a8956bc0",
            "signature_type": "Line",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@9df7b5ebead649b00bf9a53a798e4bf83a1318fd",
            "target": {
              "file": "fs/netfs/misc.c"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "function_hash": "320139595917743849076227192287843430101",
              "length": 928.0
            },
            "id": "CVE-2025-38411-b83d4087",
            "signature_type": "Function",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@9df7b5ebead649b00bf9a53a798e4bf83a1318fd",
            "target": {
              "file": "fs/netfs/misc.c",
              "function": "netfs_collect_in_app"
            }
          }
        ]
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "329ba1cb402ac328224965b8fc7a554a5150908e"
            },
            {
              "fixed": "d18facba5a5795ad44b2a00a052e3db2fa77ab12"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "2b1424cd131cfaba4cf7040473133d26cddac088"
            },
            {
              "fixed": "9df7b5ebead649b00bf9a53a798e4bf83a1318fd"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "v6.15",
        "v6.15-rc2",
        "v6.15-rc3",
        "v6.15-rc4",
        "v6.15-rc5",
        "v6.15-rc6",
        "v6.15-rc7",
        "v6.15.3",
        "v6.15.4",
        "v6.15.5",
        "v6.16-rc1",
        "v6.16-rc2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-38411.json"
      },
      "package": {
        "ecosystem": "Linux",
        "name": "Kernel"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "6.15.3"
            },
            {
              "fixed": "6.15.6"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix double put of request\n\nIf a netfs request finishes during the pause loop, it will have the ref\nthat belongs to the IN_PROGRESS flag removed at that point - however, if it\nthen goes to the final wait loop, that will *also* put the ref because it\nsees that the IN_PROGRESS flag is clear and incorrectly assumes that this\nhappened when it called the collector.\n\nIn fact, since IN_PROGRESS is clear, we shouldn't call the collector again\nsince it's done all the cleanup, such as calling ->ki_complete().\n\nFix this by making netfs_collect_in_app() just return, indicating that\nwe're done if IN_PROGRESS is removed.",
  "id": "CVE-2025-38411",
  "modified": "2025-10-22T13:32:08.624590Z",
  "published": "2025-07-25T13:20:15Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/9df7b5ebead649b00bf9a53a798e4bf83a1318fd"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/d18facba5a5795ad44b2a00a052e3db2fa77ab12"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "netfs: Fix double put of request"
}