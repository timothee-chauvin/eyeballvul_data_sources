{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-47680.json",
        "vanir_signatures": [
          {
            "deprecated": false,
            "digest": {
              "function_hash": "28988649602554565412159706248488271621",
              "length": 2248.0
            },
            "id": "CVE-2024-47680-945eb748",
            "signature_type": "Function",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@d2352b57897f6a3349666fc318dcbec99092c6a5",
            "target": {
              "file": "fs/f2fs/segment.c",
              "function": "__submit_discard_cmd"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "line_hashes": [
                "171261955472455455402781554829407693127",
                "144395437551675272368818954407007169358",
                "204215245600879435749667101494591951349",
                "85000464429055003619329380220104404157"
              ],
              "threshold": 0.9
            },
            "id": "CVE-2024-47680-a3d85d25",
            "signature_type": "Line",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@43aec4d01bd2ce961817a777b3846f8318f398e4",
            "target": {
              "file": "fs/f2fs/segment.c"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "function_hash": "28988649602554565412159706248488271621",
              "length": 2248.0
            },
            "id": "CVE-2024-47680-b7252995",
            "signature_type": "Function",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@43aec4d01bd2ce961817a777b3846f8318f398e4",
            "target": {
              "file": "fs/f2fs/segment.c",
              "function": "__submit_discard_cmd"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "line_hashes": [
                "171261955472455455402781554829407693127",
                "144395437551675272368818954407007169358",
                "204215245600879435749667101494591951349",
                "85000464429055003619329380220104404157"
              ],
              "threshold": 0.9
            },
            "id": "CVE-2024-47680-d122c110",
            "signature_type": "Line",
            "signature_version": "v1",
            "source": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@d2352b57897f6a3349666fc318dcbec99092c6a5",
            "target": {
              "file": "fs/f2fs/segment.c"
            }
          }
        ]
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "30f1e724142242a453f92d90b33e030014900bf0"
            },
            {
              "fixed": "7bd7ce68ddad5a28565e42ef21cacaff113773a9"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "30f1e724142242a453f92d90b33e030014900bf0"
            },
            {
              "fixed": "d2352b57897f6a3349666fc318dcbec99092c6a5"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "30f1e724142242a453f92d90b33e030014900bf0"
            },
            {
              "fixed": "43aec4d01bd2ce961817a777b3846f8318f398e4"
            }
          ],
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "v6.10",
        "v6.10-rc1",
        "v6.10-rc2",
        "v6.10-rc3",
        "v6.10-rc4",
        "v6.10-rc5",
        "v6.10-rc6",
        "v6.10-rc7",
        "v6.10.1",
        "v6.10.10",
        "v6.10.11",
        "v6.10.12",
        "v6.10.2",
        "v6.10.3",
        "v6.10.4",
        "v6.10.5",
        "v6.10.6",
        "v6.10.7",
        "v6.10.8",
        "v6.10.9",
        "v6.11",
        "v6.11-rc1",
        "v6.11-rc2",
        "v6.11-rc3",
        "v6.11-rc4",
        "v6.11-rc5",
        "v6.11-rc6",
        "v6.11-rc7",
        "v6.11.1",
        "v6.9",
        "v6.9-rc3",
        "v6.9-rc4",
        "v6.9-rc5",
        "v6.9-rc6",
        "v6.9-rc7"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-47680.json"
      },
      "package": {
        "ecosystem": "Linux",
        "name": "Kernel"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "6.10.0"
            },
            {
              "fixed": "6.10.13"
            }
          ],
          "type": "ECOSYSTEM"
        },
        {
          "events": [
            {
              "introduced": "6.11.0"
            },
            {
              "fixed": "6.11.2"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: check discard support for conventional zones\n\nAs the helper function f2fs_bdev_support_discard() shows, f2fs checks if\nthe target block devices support discard by calling\nbdev_max_discard_sectors() and bdev_is_zoned(). This check works well\nfor most cases, but it does not work for conventional zones on zoned\nblock devices. F2fs assumes that zoned block devices support discard,\nand calls __submit_discard_cmd(). When __submit_discard_cmd() is called\nfor sequential write required zones, it works fine since\n__submit_discard_cmd() issues zone reset commands instead of discard\ncommands. However, when __submit_discard_cmd() is called for\nconventional zones, __blkdev_issue_discard() is called even when the\ndevices do not support discard.\n\nThe inappropriate __blkdev_issue_discard() call was not a problem before\nthe commit 30f1e7241422 (\"block: move discard checks into the ioctl\nhandler\") because __blkdev_issue_discard() checked if the target devices\nsupport discard or not. If not, it returned EOPNOTSUPP. After the\ncommit, __blkdev_issue_discard() no longer checks it. It always returns\nzero and sets NULL to the given bio pointer. This NULL pointer triggers\nf2fs_bug_on() in __submit_discard_cmd(). The BUG is recreated with the\ncommands below at the umount step, where /dev/nullb0 is a zoned null_blk\nwith 5GB total size, 128MB zone size and 10 conventional zones.\n\n$ mkfs.f2fs -f -m /dev/nullb0\n$ mount /dev/nullb0 /mnt\n$ for ((i=0;i<5;i++)); do dd if=/dev/zero of=/mnt/test bs=65536 count=1600 conv=fsync; done\n$ umount /mnt\n\nTo fix the BUG, avoid the inappropriate __blkdev_issue_discard() call.\nWhen discard is requested for conventional zones, check if the device\nsupports discard or not. If not, return EOPNOTSUPP.",
  "id": "CVE-2024-47680",
  "modified": "2025-10-15T15:37:11.661988Z",
  "published": "2024-10-21T11:53:23Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/43aec4d01bd2ce961817a777b3846f8318f398e4"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/7bd7ce68ddad5a28565e42ef21cacaff113773a9"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/d2352b57897f6a3349666fc318dcbec99092c6a5"
    }
  ],
  "related": [
    "USN-7276-1",
    "USN-7277-1",
    "openSUSE-SU-2024:14500-1",
    "openSUSE-SU-2025:14705-1"
  ],
  "schema_version": "1.7.3",
  "summary": "f2fs: check discard support for conventional zones"
}