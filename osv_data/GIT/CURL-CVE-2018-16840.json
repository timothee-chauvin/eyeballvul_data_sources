{
  "affected": [
    {
      "database_specific": {
        "source": "https://curl.se/docs/CURL-CVE-2018-16840.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "7.59.0"
            },
            {
              "fixed": "7.62.0"
            }
          ],
          "type": "SEMVER"
        },
        {
          "events": [
            {
              "introduced": "b46cfbc068ebe90f18e9777b9e877e4934c1b5e3"
            },
            {
              "fixed": "81d135d67155c5295b1033679c606165d4e28f3f"
            }
          ],
          "repo": "https://github.com/curl/curl.git",
          "type": "GIT"
        }
      ],
      "versions": [
        "7.61.1",
        "7.61.0",
        "7.60.0",
        "7.59.0"
      ]
    }
  ],
  "aliases": [
    "CVE-2018-16840"
  ],
  "credits": [
    {
      "name": "Brian Carpenter (Geeknik Labs)",
      "type": "FINDER"
    },
    {
      "name": "Daniel Stenberg",
      "type": "REMEDIATION_DEVELOPER"
    }
  ],
  "database_specific": {
    "CWE": {
      "desc": "Use After Free",
      "id": "CWE-416"
    },
    "URL": "https://curl.se/docs/CVE-2018-16840.json",
    "affects": "both",
    "award": {
      "amount": "100",
      "currency": "USD"
    },
    "last_affected": "7.61.1",
    "package": "curl",
    "severity": "Low",
    "www": "https://curl.se/docs/CVE-2018-16840.html"
  },
  "details": "libcurl contains a heap use after free flaw in code related to closing an easy\nhandle.\n\nWhen closing and cleaning up an \"easy\" handle in the `Curl_close()` function,\nthe library code first frees a struct (without clearing the pointer) and might\nthen subsequently erroneously write to a struct field within that already\nfreed struct.",
  "id": "CURL-CVE-2018-16840",
  "modified": "2024-07-02T09:22:24Z",
  "published": "2018-10-31T08:00:00Z",
  "schema_version": "1.7.3",
  "summary": "use after free in handle close"
}