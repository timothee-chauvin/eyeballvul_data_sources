{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-32970.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2ab3a8f8b4b6ef1da6adf91ebf6c319b04a7f284"
            }
          ],
          "repo": "https://github.com/phlex-ruby/phlex",
          "type": "GIT"
        },
        {
          "events": [
            {
              "introduced": "215dec39f43278b1ef6761203a484602276c4f3d"
            },
            {
              "fixed": "7052ee8f7dce3692be1e7cd5658128fabb9b8101"
            }
          ],
          "repo": "https://github.com/phlex-ruby/phlex",
          "type": "GIT"
        }
      ],
      "versions": [
        "1.10.0",
        "1.10.1"
      ]
    }
  ],
  "aliases": [
    "GHSA-9p57-h987-4vgx"
  ],
  "details": "Phlex is a framework for building object-oriented views in Ruby. In affected versions there is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. Since the last two vulnerabilities https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g and https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c, we have invested in extensive browser tests. It was these new tests that helped us uncover these issues. As of now the project exercises every possible attack vector the developers can think of \u2014 including enumerating every ASCII character, and we run these tests in Chrome, Firefox and Safari. Additionally, we test against a list of 6613 known XSS payloads (see: payloadbox/xss-payload-list). The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browsers are when it comes to executing unsafe JavaScript via HTML attributes. If you render an `<a>` tag with an `href` attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user. If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user. Patches are available on RubyGems for all minor versions released in the last year. Users are advised to upgrade. Users unable to upgrade should configure a Content Security Policy that does not allow `unsafe-inline` which would effectively prevent this vulnerability from being exploited. Users who upgrade are also advised to configure a Content Security Policy header that does not allow `unsafe-inline`.",
  "id": "CVE-2024-32970",
  "modified": "2025-10-15T09:25:46.443260Z",
  "published": "2024-04-30T22:25:25Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx"
    },
    {
      "type": "FIX",
      "url": "https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/payloadbox/xss-payload-list"
    },
    {
      "type": "WEB",
      "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"
    },
    {
      "type": "WEB",
      "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline"
    },
    {
      "type": "WEB",
      "url": "https://rubygems.org/gems/phlex"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:L/A:N",
      "type": "CVSS_V3"
    }
  ],
  "summary": "Cross-site Scripting (XSS) possible with maliciously formed HTML attribute names and values in Phlex"
}