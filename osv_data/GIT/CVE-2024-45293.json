{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-45293.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "59ee38f7480904cd6487e5cbdea4d80ff2758719"
            }
          ],
          "repo": "https://github.com/phpoffice/phpspreadsheet",
          "type": "GIT"
        }
      ],
      "versions": [
        "1.0.0",
        "1.0.0-beta",
        "1.0.0-beta2",
        "1.1.0",
        "1.10.0",
        "1.10.1",
        "1.11.0",
        "1.12.0",
        "1.13.0",
        "1.14.0",
        "1.14.1",
        "1.15.0",
        "1.16.0",
        "1.17.0",
        "1.17.1",
        "1.18.0",
        "1.19.0",
        "1.2.0",
        "1.2.1",
        "1.20.0",
        "1.21.0",
        "1.22.0",
        "1.23.0",
        "1.24.0",
        "1.24.1",
        "1.25.0",
        "1.25.1",
        "1.25.2",
        "1.27.0",
        "1.28.0",
        "1.29.0",
        "1.3.0",
        "1.3.1",
        "1.4.0",
        "1.4.1",
        "1.5.0",
        "1.5.1",
        "1.5.2",
        "1.6.0",
        "1.7.0",
        "1.8.0",
        "1.8.1",
        "1.8.2",
        "1.9.0",
        "phpexcel-last-cherry-picked-commit",
        "phpexcel-last-release-1.8.1"
      ]
    }
  ],
  "aliases": [
    "GHSA-6hwr-6v2f-3m88"
  ],
  "details": "PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. The security scanner responsible for preventing XXE attacks in the XLSX reader can be bypassed by slightly modifying the XML structure, utilizing white-spaces. On servers that allow users to upload their own Excel (XLSX) sheets, Server files and sensitive information can be disclosed by providing a crafted sheet. The security scan function in src/PhpSpreadsheet/Reader/Security/XmlScanner.php contains a flawed XML encoding check to retrieve the input file's XML encoding in the toUtf8 function. The function searches for the XML encoding through a defined regex which looks for `encoding=\"*\"` and/or `encoding='*'`, if not found, it defaults to the UTF-8 encoding which bypasses the conversion logic. This logic can be used to pass a UTF-7 encoded XXE payload, by utilizing a whitespace before or after the = in the attribute definition. Sensitive information disclosure through the XXE on sites that allow users to upload their own excel spreadsheets, and parse them using PHPSpreadsheet's Excel parser. This issue has been addressed in release versions 1.29.1, 2.1.1, and 2.3.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "id": "CVE-2024-45293",
  "modified": "2025-07-29T11:11:06.771920Z",
  "published": "2024-10-07T20:15:06Z",
  "references": [
    {
      "type": "EVIDENCE",
      "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88"
    }
  ],
  "schema_version": "1.6.0",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "type": "CVSS_V3"
    }
  ]
}