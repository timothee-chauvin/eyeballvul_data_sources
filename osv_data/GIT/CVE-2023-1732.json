{"schema_version":"1.7.3","id":"CVE-2023-1732","published":"2023-05-10T12:15:10Z","modified":"2025-10-21T12:58:11.688110Z","aliases":["GHSA-2q89-485c-9j2x","GO-2023-1765"],"related":["CGA-36jv-q8vj-wwgx","CGA-cr67-998q-3hv7","CGA-jjxm-h724-pf33","CGA-r39w-4953-24v7","CGA-xjh6-7mfx-4rmj","GHSA-2q89-485c-9j2x","openSUSE-SU-2025:14663-1"],"details":"When sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether crypto/rand.Read() returns an error. In rare deployment cases (error thrown by the Read() function), this could lead to a predictable shared secret.\n\nThe tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides crypto/rand.Reader, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.\n\n","affected":[{"ranges":[{"type":"GIT","repo":"https://github.com/cloudflare/circl","events":[{"introduced":"0"},{"fixed":"3bef500f2b925f150815a360b90081021e082939"}]}],"versions":["v1.0.0","v1.1.0","v1.2.0","v1.3.0","v1.3.1","v1.3.2"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2023-1732.json"}}],"references":[{"type":"ADVISORY","url":"https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x"}],"severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:H/A:N"}]}