{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2025-24359.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "40c31962bbdfe1012aacca1892a8d9263a67258e"
            }
          ],
          "repo": "https://github.com/lmfit/asteval",
          "type": "GIT"
        }
      ],
      "versions": [
        "0.9",
        "0.9.1",
        "0.9.10",
        "0.9.11",
        "0.9.12",
        "0.9.13",
        "0.9.14",
        "0.9.15",
        "0.9.16",
        "0.9.17",
        "0.9.18",
        "0.9.19",
        "0.9.2",
        "0.9.20",
        "0.9.21",
        "0.9.22",
        "0.9.23",
        "0.9.24",
        "0.9.25",
        "0.9.26",
        "0.9.27",
        "0.9.28",
        "0.9.29",
        "0.9.3",
        "0.9.3.1",
        "0.9.30",
        "0.9.31",
        "0.9.32",
        "0.9.33",
        "0.9.4",
        "0.9.5",
        "0.9.6",
        "0.9.7",
        "0.9.9",
        "1.0.0",
        "1.0.1",
        "1.0.2",
        "1.0.3",
        "1.0.4",
        "1.0.5"
      ]
    }
  ],
  "aliases": [
    "GHSA-3wwr-3g9f-9gc7"
  ],
  "details": "ASTEVAL is an evaluator of Python expressions and statements. Prior to version 1.0.6, if an attacker can control the input to the `asteval` library, they can bypass asteval's restrictions and execute arbitrary Python code in the context of the application using the library. The vulnerability is rooted in how `asteval` performs handling of `FormattedValue` AST nodes. In particular, the `on_formattedvalue` value uses the dangerous format method of the str class. The code allows an attacker to manipulate the value of the string used in the dangerous call `fmt.format(__fstring__=val)`. This vulnerability can be exploited to access protected attributes by intentionally triggering an `AttributeError` exception. The attacker can then catch the exception and use its `obj` attribute to gain arbitrary access to sensitive or protected object properties. Version 1.0.6 fixes this issue.",
  "id": "CVE-2025-24359",
  "modified": "2025-10-15T22:36:44.544781Z",
  "published": "2025-01-24T16:52:44Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://github.com/lmfit/asteval/security/advisories/GHSA-3wwr-3g9f-9gc7"
    },
    {
      "type": "WEB",
      "url": "https://github.com/lmfit/asteval/blob/cfb57f0beebe0dc0520a1fbabc35e66060c7ea71/asteval/asteval.py#L507"
    },
    {
      "type": "WEB",
      "url": "https://lucumr.pocoo.org/2016/12/29/careful-with-str-format"
    }
  ],
  "related": [
    "openSUSE-SU-2025:0052-1",
    "openSUSE-SU-2025:14701-1"
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "type": "CVSS_V3"
    }
  ],
  "summary": "ASTEVAL Vulnerable to Maliciously Crafted Format Strings Leading to Sandbox Escape"
}