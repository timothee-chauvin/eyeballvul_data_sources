{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-40642.json",
        "vanir_signatures": [
          {
            "deprecated": false,
            "digest": {
              "function_hash": "308672755880576729275680103460533370178",
              "length": 2174.0
            },
            "id": "CVE-2024-40642-44a3ea22",
            "signature_type": "Function",
            "signature_version": "v1",
            "source": "https://github.com/netty/netty-incubator-codec-ohttp/commit/b687a0cf6ea1030232ea204d73bce82f2698e571",
            "target": {
              "file": "codec-bhttp/src/main/java/io/netty/incubator/codec/bhttp/BinaryHttpParser.java",
              "function": "readRequestHead"
            }
          },
          {
            "deprecated": false,
            "digest": {
              "line_hashes": [
                "288903232266567075285009015813637606656",
                "139951431925293116909537866680374189875",
                "333399849930919235630038085603042261135",
                "332482053114639794549007287403891164192",
                "295664771755265962120291336291685923961",
                "59953152661963135993613985232676449058",
                "109308632724480638071570442032855350798",
                "266850524801612984472156582666181849816",
                "304612300469634270549911967271459091973"
              ],
              "threshold": 0.9
            },
            "id": "CVE-2024-40642-4ceb8165",
            "signature_type": "Line",
            "signature_version": "v1",
            "source": "https://github.com/netty/netty-incubator-codec-ohttp/commit/b687a0cf6ea1030232ea204d73bce82f2698e571",
            "target": {
              "file": "codec-bhttp/src/main/java/io/netty/incubator/codec/bhttp/BinaryHttpParser.java"
            }
          }
        ]
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "b687a0cf6ea1030232ea204d73bce82f2698e571"
            }
          ],
          "repo": "https://github.com/netty/netty-incubator-codec-ohttp",
          "type": "GIT"
        }
      ],
      "versions": [
        "netty-incubator-codec-parent-ohttp-0.0.1.Final",
        "netty-incubator-codec-parent-ohttp-0.0.10.Final",
        "netty-incubator-codec-parent-ohttp-0.0.11.Final",
        "netty-incubator-codec-parent-ohttp-0.0.12.Final",
        "netty-incubator-codec-parent-ohttp-0.0.2.Final",
        "netty-incubator-codec-parent-ohttp-0.0.3.Final",
        "netty-incubator-codec-parent-ohttp-0.0.4.Final",
        "netty-incubator-codec-parent-ohttp-0.0.5.Final",
        "netty-incubator-codec-parent-ohttp-0.0.6.Final",
        "netty-incubator-codec-parent-ohttp-0.0.7.Final",
        "netty-incubator-codec-parent-ohttp-0.0.8.Final",
        "netty-incubator-codec-parent-ohttp-0.0.9.Final"
      ]
    }
  ],
  "aliases": [
    "GHSA-q8f2-hxq5-cp4h"
  ],
  "details": "The netty incubator codec.bhttp is a java language binary http parser. In affected versions the `BinaryHttpParser` class does not properly validate input values thus giving attackers almost complete control over the HTTP requests constructed from the parsed output. Attackers can abuse several issues individually to perform various injection attacks including HTTP request smuggling, desync attacks, HTTP header injections, request queue poisoning, caching attacks and Server Side Request Forgery (SSRF). Attacker could also combine several issues to create well-formed messages for other text-based protocols which may result in attacks beyond the HTTP protocol. The BinaryHttpParser class implements the readRequestHead method which performs most of the relevant parsing of the received request. The data structure prefixes values with a variable length integer value. The parsing code below first gets the lengths of the values from the prefixed variable length integer. After it has all of the lengths and calculates all of the indices, the parser casts the applicable slices of the ByteBuf to String. Finally, it passes these values into a new `DefaultBinaryHttpRequest` object where no further parsing or validation occurs. Method is partially validated while other values are not validated at all. Software that relies on netty to apply input validation for binary HTTP data may be vulnerable to various injection and protocol based attacks. This issue has been addressed in version 0.0.13.Final. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "id": "CVE-2024-40642",
  "modified": "2025-10-10T08:50:13.111280Z",
  "published": "2024-07-18T23:15:02Z",
  "references": [
    {
      "type": "EVIDENCE",
      "url": "https://github.com/netty/netty-incubator-codec-ohttp/security/advisories/GHSA-q8f2-hxq5-cp4h"
    },
    {
      "type": "FIX",
      "url": "https://github.com/netty/netty-incubator-codec-ohttp/commit/b687a0cf6ea1030232ea204d73bce82f2698e571"
    }
  ],
  "related": [
    "GHSA-q8f2-hxq5-cp4h"
  ],
  "schema_version": "1.7.3"
}