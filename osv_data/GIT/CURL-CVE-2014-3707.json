{
  "id": "CURL-CVE-2014-3707",
  "summary": "duphandle read out of bounds",
  "details": "libcurl's function\n[`curl_easy_duphandle()`](https://curl.se/libcurl/c/curl_easy_duphandle.html)\nhas a bug that can lead to libcurl eventually sending off sensitive data that\nwas not intended for sending.\n\nWhen doing an HTTP POST transfer with libcurl, you can use the\n`CURLOPT_COPYPOSTFIELDS` option to specify a memory area holding the data to\nsend to the remote server. The memory area's size is set with a separate\noption, for example `CURLOPT_POSTFIELDSIZE`.\n\nAs the name implies, the data in the specified buffer is copied to a privately\nheld memory buffer that libcurl allocates on the heap. The memory area is\nassociated with the common CURL handle, often referred to as an \"easy handle\".\n\nThis handle can be duplicated by an application to create an identical copy,\nand all the already set options and data is then also similarly cloned and are\nbe associated with the newly returned handle. This also includes the data to\nsend in an HTTP POST request.\n\nThe internal libcurl function that duplicates options from the old handle to\nthe new had two problems:\n\n1. It mistakenly treated the post data buffer as if it was a C string which is\n   assumed to end with a zero byte. `strdup()` was subsequently used to\n   duplicate the post data buffer, and as a post data buffer can both\n   legitimately contain a zero byte, or may not contain any zero bytes at all\n   (including a tailing one), `strdup()` could create a copy that a) was too\n   small b) was too large or c) could crash due to reading an inaccessible\n   memory area. The `strdup()` function of course allocates memory off the\n   heap.\n\n2. After duplication of the handle data, the pointer used to read from when\n   sending the data was not updated. When sending off the post, libcurl would\n   still read from the original handle's buffer which at that time could have\n   been freed or reused for other purposes.\n\nWhen libcurl subsequently constructs the HTTP POST request and includes data\nfor the protocol body it copies data from that pointer using the old size and\nthe old pointer. This makes a read from the wrong place and can lead to\nlibcurl inserting data into the request that happens to be stored at that\nplaces in memory at that time.\n\nWe are not aware of anyone having been able to actually exploit this for\nnefarious purposes, but we cannot exclude that it is possible or even might\nalready have been exploited.",
  "aliases": [
    "CVE-2014-3707"
  ],
  "modified": "2024-06-07T13:53:51Z",
  "published": "2014-11-05T08:00:00Z",
  "database_specific": {
    "CWE": {
      "id": "CWE-126",
      "desc": "Buffer Over-read"
    },
    "package": "curl",
    "URL": "https://curl.se/docs/CVE-2014-3707.json",
    "severity": "Medium",
    "www": "https://curl.se/docs/CVE-2014-3707.html",
    "last_affected": "7.38.0"
  },
  "affected": [
    {
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "7.17.1"
            },
            {
              "fixed": "7.39.0"
            }
          ]
        },
        {
          "type": "GIT",
          "repo": "https://github.com/curl/curl.git",
          "events": [
            {
              "introduced": "a005243908803662d4a05427bc1061db42f4d057"
            },
            {
              "fixed": "b3875606925536f82fc61f3114ac42f29eaf6945"
            }
          ]
        }
      ],
      "versions": [
        "7.38.0",
        "7.37.1",
        "7.37.0",
        "7.36.0",
        "7.35.0",
        "7.34.0",
        "7.33.0",
        "7.32.0",
        "7.31.0",
        "7.30.0",
        "7.29.0",
        "7.28.1",
        "7.28.0",
        "7.27.0",
        "7.26.0",
        "7.25.0",
        "7.24.0",
        "7.23.1",
        "7.23.0",
        "7.22.0",
        "7.21.7",
        "7.21.6",
        "7.21.5",
        "7.21.4",
        "7.21.3",
        "7.21.2",
        "7.21.1",
        "7.21.0",
        "7.20.1",
        "7.20.0",
        "7.19.7",
        "7.19.6",
        "7.19.5",
        "7.19.4",
        "7.19.3",
        "7.19.2",
        "7.19.1",
        "7.19.0",
        "7.18.2",
        "7.18.1",
        "7.18.0",
        "7.17.1"
      ],
      "database_specific": {
        "source": "https://curl.se/docs/CURL-CVE-2014-3707.json"
      }
    }
  ],
  "schema_version": "1.6.0",
  "credits": [
    {
      "name": "Symeon Paraschoudis",
      "type": "FINDER"
    },
    {
      "name": "Daniel Stenberg",
      "type": "REMEDIATION_DEVELOPER"
    },
    {
      "name": "Stas Malyshev",
      "type": "OTHER"
    },
    {
      "name": "Dan Fandrich",
      "type": "OTHER"
    },
    {
      "name": "Tomas Hoger",
      "type": "OTHER"
    }
  ]
}