{"schema_version":"1.7.3","id":"CVE-2024-50118","published":"2024-11-05T17:10:48Z","modified":"2025-10-22T04:16:26.815970Z","related":["USN-7276-1","USN-7277-1","openSUSE-SU-2024:14500-1","openSUSE-SU-2025:14705-1"],"summary":"btrfs: reject ro->rw reconfiguration if there are hard ro requirements","details":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: reject ro->rw reconfiguration if there are hard ro requirements\n\n[BUG]\nSyzbot reports the following crash:\n\n  BTRFS info (device loop0 state MCS): disabling free space tree\n  BTRFS info (device loop0 state MCS): clearing compat-ro feature flag for FREE_SPACE_TREE (0x1)\n  BTRFS info (device loop0 state MCS): clearing compat-ro feature flag for FREE_SPACE_TREE_VALID (0x2)\n  Oops: general protection fault, probably for non-canonical address 0xdffffc0000000003: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  KASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\n  RIP: 0010:backup_super_roots fs/btrfs/disk-io.c:1691 [inline]\n  RIP: 0010:write_all_supers+0x97a/0x40f0 fs/btrfs/disk-io.c:4041\n  Call Trace:\n   <TASK>\n   btrfs_commit_transaction+0x1eae/0x3740 fs/btrfs/transaction.c:2530\n   btrfs_delete_free_space_tree+0x383/0x730 fs/btrfs/free-space-tree.c:1312\n   btrfs_start_pre_rw_mount+0xf28/0x1300 fs/btrfs/disk-io.c:3012\n   btrfs_remount_rw fs/btrfs/super.c:1309 [inline]\n   btrfs_reconfigure+0xae6/0x2d40 fs/btrfs/super.c:1534\n   btrfs_reconfigure_for_mount fs/btrfs/super.c:2020 [inline]\n   btrfs_get_tree_subvol fs/btrfs/super.c:2079 [inline]\n   btrfs_get_tree+0x918/0x1920 fs/btrfs/super.c:2115\n   vfs_get_tree+0x90/0x2b0 fs/super.c:1800\n   do_new_mount+0x2be/0xb40 fs/namespace.c:3472\n   do_mount fs/namespace.c:3812 [inline]\n   __do_sys_mount fs/namespace.c:4020 [inline]\n   __se_sys_mount+0x2d6/0x3c0 fs/namespace.c:3997\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n[CAUSE]\nTo support mounting different subvolume with different RO/RW flags for\nthe new mount APIs, btrfs introduced two workaround to support this feature:\n\n- Skip mount option/feature checks if we are mounting a different\n  subvolume\n\n- Reconfigure the fs to RW if the initial mount is RO\n\nCombining these two, we can have the following sequence:\n\n- Mount the fs ro,rescue=all,clear_cache,space_cache=v1\n  rescue=all will mark the fs as hard read-only, so no v2 cache clearing\n  will happen.\n\n- Mount a subvolume rw of the same fs.\n  We go into btrfs_get_tree_subvol(), but fc_mount() returns EBUSY\n  because our new fc is RW, different from the original fs.\n\n  Now we enter btrfs_reconfigure_for_mount(), which switches the RO flag\n  first so that we can grab the existing fs_info.\n  Then we reconfigure the fs to RW.\n\n- During reconfiguration, option/features check is skipped\n  This means we will restart the v2 cache clearing, and convert back to\n  v1 cache.\n  This will trigger fs writes, and since the original fs has \"rescue=all\"\n  option, it skips the csum tree read.\n\n  And eventually causing NULL pointer dereference in super block\n  writeback.\n\n[FIX]\nFor reconfiguration caused by different subvolume RO/RW flags, ensure we\nalways run btrfs_check_options() to ensure we have proper hard RO\nrequirements met.\n\nIn fact the function btrfs_check_options() doesn't really do many\ncomplex checks, but hard RO requirement and some feature dependency\nchecks, thus there is no special reason not to do the check for mount\nreconfiguration.","affected":[{"ranges":[{"type":"GIT","repo":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git","events":[{"introduced":"f044b318675f0347ecfb88377542651ba4eb9e1f"},{"fixed":"23724398b55d9570f6ae79dd2ea026fff8896bf1"}]},{"type":"GIT","repo":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git","events":[{"introduced":"f044b318675f0347ecfb88377542651ba4eb9e1f"},{"fixed":"3c36a72c1d27de6618c1c480c793d9924640f5bb"}]}],"versions":["v6.10","v6.10-rc1","v6.10-rc2","v6.10-rc3","v6.10-rc4","v6.10-rc5","v6.10-rc6","v6.10-rc7","v6.11","v6.11-rc1","v6.11-rc2","v6.11-rc3","v6.11-rc4","v6.11-rc5","v6.11-rc6","v6.11-rc7","v6.11.1","v6.11.2","v6.11.3","v6.11.4","v6.11.5","v6.7","v6.7-rc6","v6.7-rc7","v6.7-rc8","v6.8","v6.8-rc1","v6.8-rc2","v6.8-rc3","v6.8-rc4","v6.8-rc5","v6.8-rc6","v6.8-rc7","v6.9","v6.9-rc1","v6.9-rc2","v6.9-rc3","v6.9-rc4","v6.9-rc5","v6.9-rc6","v6.9-rc7"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-50118.json","vanir_signatures":[{"deprecated":false,"digest":{"line_hashes":["1354738730880254993572753195740677827","114325709488891891103537465077621258185","123162045496811755108155832102287405384","47784851995095847239215821002006558472","184298916464510678134519836624871443877"],"threshold":0.9},"id":"CVE-2024-50118-3f1f688c","signature_type":"Line","signature_version":"v1","source":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@23724398b55d9570f6ae79dd2ea026fff8896bf1","target":{"file":"fs/btrfs/super.c"}},{"deprecated":false,"digest":{"function_hash":"261740042091872875542319675342788465807","length":1913},"id":"CVE-2024-50118-946484c7","signature_type":"Function","signature_version":"v1","source":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@3c36a72c1d27de6618c1c480c793d9924640f5bb","target":{"file":"fs/btrfs/super.c","function":"btrfs_reconfigure"}},{"deprecated":false,"digest":{"function_hash":"261740042091872875542319675342788465807","length":1913},"id":"CVE-2024-50118-b6752b54","signature_type":"Function","signature_version":"v1","source":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@23724398b55d9570f6ae79dd2ea026fff8896bf1","target":{"file":"fs/btrfs/super.c","function":"btrfs_reconfigure"}},{"deprecated":false,"digest":{"line_hashes":["1354738730880254993572753195740677827","114325709488891891103537465077621258185","123162045496811755108155832102287405384","47784851995095847239215821002006558472","184298916464510678134519836624871443877"],"threshold":0.9},"id":"CVE-2024-50118-e6ba8ec0","signature_type":"Line","signature_version":"v1","source":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git@3c36a72c1d27de6618c1c480c793d9924640f5bb","target":{"file":"fs/btrfs/super.c"}}]}},{"package":{"name":"Kernel","ecosystem":"Linux"},"ranges":[{"type":"ECOSYSTEM","events":[{"introduced":"6.8.0"},{"fixed":"6.11.6"}]}],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-50118.json"}}],"references":[{"type":"PACKAGE","url":"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git"},{"type":"WEB","url":"https://git.kernel.org/stable/c/23724398b55d9570f6ae79dd2ea026fff8896bf1"},{"type":"WEB","url":"https://git.kernel.org/stable/c/3c36a72c1d27de6618c1c480c793d9924640f5bb"}],"severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}]}