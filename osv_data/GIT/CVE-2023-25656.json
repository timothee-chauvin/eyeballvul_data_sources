{"schema_version":"1.7.3","id":"CVE-2023-25656","published":"2023-02-20T00:00:00Z","modified":"2025-10-22T18:37:06.455751Z","aliases":["GHSA-87x9-7grx-m28v","GO-2023-1589"],"related":["CGA-gxhc-4frj-pvq5","CGA-jj7h-3c55-cr89"],"summary":"notation-go has excessive memory allocation on verification","details":"notation-go is a collection of libraries for supporting Notation sign, verify, push, and pull of oci artifacts. Prior to version 1.0.0-rc.3, notation-go users will find their application using excessive memory when verifying signatures. The application will be killed, and thus availability is impacted. The problem has been patched in the release v1.0.0-rc.3. Some workarounds are available. Users can review their own trust policy file and check if the identity string contains `=#`. Meanwhile, users should only put trusted certificates in their trust stores referenced by their own trust policy files, and make sure the `authenticity` validation is set to `enforce`.","affected":[{"ranges":[{"type":"GIT","repo":"https://github.com/notaryproject/notation-go","events":[{"introduced":"0"},{"fixed":"de8b7ddaa5b22c6b4c40924ade50d89bfb813a25"}]}],"versions":["v0.10.0-alpha.3","v0.11.0-alpha.4","v0.12.0-beta.1","v0.7.0-alpha.1","v0.8.0-alpha.1","v0.9.0-alpha.1","v1.0.0-rc.1"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2023-25656.json"}}],"references":[{"type":"ADVISORY","url":"https://github.com/notaryproject/notation-go/security/advisories/GHSA-87x9-7grx-m28v"},{"type":"WEB","url":"https://github.com/notaryproject/notation-go/releases/tag/v1.0.0-rc.3"}],"database_specific":{"cwe_ids":["CWE-770"]},"severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}]}