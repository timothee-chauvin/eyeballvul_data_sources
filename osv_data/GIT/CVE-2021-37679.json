{"schema_version":"1.7.3","id":"CVE-2021-37679","published":"2021-08-12T23:15:08Z","modified":"2025-10-21T06:44:57.974335Z","aliases":["BIT-tensorflow-2021-37679","GHSA-g8wg-cjwc-xhhp","PYSEC-2021-301","PYSEC-2021-592","PYSEC-2021-790"],"related":["GHSA-g8wg-cjwc-xhhp","openSUSE-SU-2022:10014-1","openSUSE-SU-2024:12116-1"],"details":"TensorFlow is an end-to-end open source platform for machine learning. In affected versions it is possible to nest a `tf.map_fn` within another `tf.map_fn` call. However, if the input tensor is a `RaggedTensor` and there is no function signature provided, code assumes the output is a fully specified tensor and fills output buffer with uninitialized contents from the heap. The `t` and `z` outputs should be identical, however this is not the case. The last row of `t` contains data from the heap which can be used to leak other memory information. The bug lies in the conversion from a `Variant` tensor to a `RaggedTensor`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_from_variant_op.cc#L177-L190) does not check that all inner shapes match and this results in the additional dimensions. The same implementation can result in data loss, if input tensor is tweaked. We have patched the issue in GitHub commit 4e2565483d0ffcadc719bd44893fb7f609bb5f12. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","affected":[{"ranges":[{"type":"GIT","repo":"https://github.com/tensorflow/tensorflow","events":[{"introduced":"0"},{"fixed":"4e2565483d0ffcadc719bd44893fb7f609bb5f12"}]}],"versions":["0.12.0-rc0","0.12.0-rc1","0.12.1","0.5.0","0.6.0","v0.10.0","v0.10.0rc0","v0.11.0","v0.11.0rc0","v0.11.0rc1","v0.11.0rc2","v0.12.0","v0.7.0","v0.7.1","v0.8.0rc0","v0.9.0","v0.9.0rc0","v1.0.0","v1.0.0-alpha","v1.0.0-rc0","v1.0.0-rc1","v1.0.0-rc2","v1.1.0","v1.1.0-rc0","v1.1.0-rc1","v1.1.0-rc2","v1.12.0","v1.12.0-rc0","v1.12.0-rc1","v1.12.0-rc2","v1.12.1","v1.2.0","v1.2.0-rc0","v1.2.0-rc1","v1.2.0-rc2","v1.3.0-rc0","v1.3.0-rc1","v1.5.0","v1.5.0-rc0","v1.5.0-rc1","v1.6.0","v1.6.0-rc0","v1.6.0-rc1","v1.7.0","v1.7.0-rc0","v1.7.0-rc1","v1.8.0","v1.8.0-rc0","v1.8.0-rc1","v1.9.0","v1.9.0-rc0","v1.9.0-rc1","v1.9.0-rc2"],"database_specific":{"source":"https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2021-37679.json","vanir_signatures":[{"deprecated":false,"digest":{"line_hashes":["268097041829526550468452182232147855153","19114148587165661991098993555809149349","227958164308406854050585396418602896354","153140420405054574882507730517776531886","91500572690097290887166755144242607208"],"threshold":0.9},"id":"CVE-2021-37679-548658b8","signature_type":"Line","signature_version":"v1","source":"https://github.com/tensorflow/tensorflow/commit/4e2565483d0ffcadc719bd44893fb7f609bb5f12","target":{"file":"tensorflow/core/kernels/ragged_tensor_from_variant_op.cc"}},{"deprecated":false,"digest":{"function_hash":"280793916758213145306724953094820186860","length":3320},"id":"CVE-2021-37679-7defc6a5","signature_type":"Function","signature_version":"v1","source":"https://github.com/tensorflow/tensorflow/commit/4e2565483d0ffcadc719bd44893fb7f609bb5f12","target":{"file":"tensorflow/core/kernels/ragged_tensor_from_variant_op.cc","function":"NestedStackRaggedTensors"}}]}}],"references":[{"type":"FIX","url":"https://github.com/tensorflow/tensorflow/commit/4e2565483d0ffcadc719bd44893fb7f609bb5f12"},{"type":"ADVISORY","url":"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g8wg-cjwc-xhhp"}],"severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}]}